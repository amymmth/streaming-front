{"version":3,"file":"BaseAction.test.js","names":["createEntrypoint","createServices","BaseAction","describe","emptyResult","code","metadata","services","entrypoint","beforeEach","it","expect","toBeDefined","action","onError","undefined","jest","fn","run","generator","dummy","next","throw","imports","Map","toEqual","done","value","handler","generator1","generator2","toBe","e","error","Error","toHaveBeenCalledWith","resolved","toHaveBeenCalledTimes","toThrow","error1","error2","wait","Promise","resolve","setTimeout","gen1Next","gen1Result","fail"],"sources":["../../../../src/transform/actions/__tests__/BaseAction.test.ts"],"sourcesContent":["/* eslint-disable require-yield */\nimport type { Entrypoint } from '../../Entrypoint';\nimport {\n  createEntrypoint,\n  createServices,\n} from '../../__tests__/entrypoint-helpers';\nimport type { ITransformAction, Services, Handler } from '../../types';\nimport { BaseAction } from '../BaseAction';\n\ndescribe('BaseAction', () => {\n  const emptyResult = { code: '', metadata: null };\n\n  let services: Services;\n  let entrypoint: Entrypoint;\n\n  beforeEach(() => {\n    services = createServices();\n    entrypoint = createEntrypoint(services, '/foo/bar.js', ['default']);\n  });\n\n  it('should be defined', () => {\n    expect(BaseAction).toBeDefined();\n  });\n\n  describe('instance', () => {\n    let action: BaseAction<ITransformAction>;\n    let onError: jest.Mock;\n\n    beforeEach(() => {\n      action = new BaseAction(\n        'transform',\n        services,\n        entrypoint,\n        undefined,\n        null\n      );\n\n      onError = jest.fn();\n    });\n\n    it('action can be run', () => {\n      expect(action.run).toBeDefined();\n    });\n\n    it('run should return generator-like object', () => {\n      const generator = action.run(function* dummy() {\n        return emptyResult;\n      });\n      expect(generator.next).toBeDefined();\n      expect(generator.throw).toBeDefined();\n    });\n\n    it('generator should yield data', () => {\n      const generator = action.run<'sync', Handler<'sync', ITransformAction>>(\n        function* dummy() {\n          yield ['resolveImports', entrypoint, { imports: new Map() }, null];\n\n          return { code: 'bar', metadata: null };\n        }\n      );\n\n      expect(generator.next()).toEqual({\n        done: false,\n        value: ['resolveImports', entrypoint, { imports: new Map() }, null],\n      });\n\n      expect(generator.next()).toEqual({\n        done: true,\n        value: { code: 'bar', metadata: null },\n      });\n    });\n\n    it('should return previous result if run again', () => {\n      const handler: Handler<'sync', ITransformAction> = function* handler() {\n        yield ['resolveImports', entrypoint, { imports: new Map() }, null];\n\n        return { code: 'bar', metadata: null };\n      };\n\n      const generator1 = action.run(handler);\n      const generator2 = action.run(handler);\n\n      expect(generator1.next()).toBe(generator2.next()); // yield\n      expect(generator1.next()).toBe(generator2.next()); // return\n    });\n\n    it('should process error in generator', () => {\n      const handler: Handler<'sync', ITransformAction> = function* handler() {\n        try {\n          yield ['resolveImports', entrypoint, { imports: new Map() }, null];\n        } catch (e) {\n          onError(e);\n        }\n\n        return emptyResult;\n      };\n\n      const generator = action.run(handler);\n\n      expect(generator.next()).toEqual({\n        done: false,\n        value: ['resolveImports', entrypoint, { imports: new Map() }, null],\n      });\n\n      const error = new Error('foo');\n      expect(generator.throw(error)).toEqual({\n        done: true,\n        value: emptyResult,\n      });\n      expect(onError).toHaveBeenCalledWith(error);\n    });\n\n    it('should yield correct data after error', () => {\n      const handler: Handler<'sync', ITransformAction> = function* handler() {\n        try {\n          yield ['resolveImports', entrypoint, { imports: new Map() }, null];\n        } catch (e) {\n          onError(e);\n        }\n\n        yield ['processImports', entrypoint, { resolved: [] }, null];\n\n        return emptyResult;\n      };\n\n      const generator = action.run(handler);\n\n      expect(generator.next()).toEqual({\n        done: false,\n        value: ['resolveImports', entrypoint, { imports: new Map() }, null],\n      });\n\n      const error = new Error('foo');\n      expect(generator.throw(error)).toEqual({\n        done: false,\n        value: ['processImports', entrypoint, { resolved: [] }, null],\n      });\n      expect(onError).toHaveBeenCalledWith(error);\n\n      expect(generator.next()).toEqual({\n        done: true,\n        value: emptyResult,\n      });\n    });\n\n    it('should return the same data for repetitive runs if the first one had error', () => {\n      const handler: Handler<'sync', ITransformAction> = function* handler() {\n        try {\n          yield ['resolveImports', entrypoint, { imports: new Map() }, null];\n        } catch (e) {\n          onError(e);\n        }\n\n        return emptyResult;\n      };\n\n      const generator1 = action.run(handler);\n      const generator2 = action.run(handler);\n\n      expect(generator1.next()).toEqual({\n        done: false,\n        value: ['resolveImports', entrypoint, { imports: new Map() }, null],\n      });\n\n      const error = new Error('foo');\n      expect(generator1.throw(error)).toEqual({\n        done: true,\n        value: emptyResult,\n      });\n      expect(onError).toHaveBeenCalledWith(error);\n\n      expect(generator2.next()).toEqual({\n        done: false,\n        value: ['resolveImports', entrypoint, { imports: new Map() }, null],\n      });\n\n      expect(generator2.next()).toEqual({ done: true, value: emptyResult });\n      expect(onError).toHaveBeenCalledTimes(1);\n    });\n\n    it(\"should rethrow error from every run if the first one didn't catch it\", () => {\n      const error = new Error('foo');\n\n      const handler: Handler<'sync', ITransformAction> = function* handler() {\n        throw error;\n      };\n\n      const generator1 = action.run(handler);\n      const generator2 = action.run(handler);\n\n      expect(() => generator1.next()).toThrow(error);\n      expect(() => generator2.next()).toThrow(error);\n    });\n\n    it('should process parallel throws', () => {\n      const handler: Handler<'sync', ITransformAction> = function* handler() {\n        try {\n          yield ['resolveImports', entrypoint, { imports: new Map() }, null];\n        } catch (e) {\n          onError(e);\n        }\n\n        return emptyResult;\n      };\n\n      const generator1 = action.run(handler);\n      const generator2 = action.run(handler);\n\n      expect(generator1.next()).toEqual({\n        done: false,\n        value: ['resolveImports', entrypoint, { imports: new Map() }, null],\n      });\n      expect(generator2.next()).toEqual({\n        done: false,\n        value: ['resolveImports', entrypoint, { imports: new Map() }, null],\n      });\n\n      const error1 = new Error('foo');\n      const error2 = new Error('bar');\n      expect(generator1.throw(error1)).toEqual({\n        done: true,\n        value: emptyResult,\n      });\n      expect(generator2.throw(error2)).toEqual({\n        done: true,\n        value: emptyResult,\n      });\n      expect(onError).toHaveBeenCalledTimes(1);\n      expect(onError).toHaveBeenCalledWith(error1);\n    });\n\n    it('should cache results of async generators', async () => {\n      const wait = () =>\n        new Promise((resolve) => {\n          setTimeout(() => {\n            resolve(null);\n          }, 100);\n        });\n\n      const handler: Handler<'async', ITransformAction> =\n        async function* handler() {\n          await wait();\n          yield ['resolveImports', entrypoint, { imports: new Map() }, null];\n\n          return { code: 'bar', metadata: null };\n        };\n\n      const generator1 = action.run(handler);\n      const generator2 = action.run(handler);\n\n      const gen1Next = await generator1.next();\n      expect(gen1Next).toEqual({\n        done: false,\n        value: ['resolveImports', entrypoint, { imports: new Map() }, null],\n      });\n\n      expect(await generator2.next()).toEqual(gen1Next);\n\n      const gen1Result = await generator1.next();\n      expect(gen1Result).toEqual({\n        done: true,\n        value: { code: 'bar', metadata: null },\n      });\n\n      expect(await generator2.next()).toEqual(gen1Result);\n    });\n\n    it('should cache errors of async generators', async () => {\n      const wait = () =>\n        new Promise((resolve) => {\n          setTimeout(() => {\n            resolve(null);\n          }, 100);\n        });\n\n      const handler: Handler<'async', ITransformAction> =\n        async function* handler() {\n          await wait();\n          yield ['resolveImports', entrypoint, { imports: new Map() }, null];\n\n          throw new Error('foo');\n        };\n\n      const generator1 = action.run(handler);\n      const generator2 = action.run(handler);\n\n      const gen1Next = await generator1.next();\n      expect(gen1Next).toEqual({\n        done: false,\n        value: ['resolveImports', entrypoint, { imports: new Map() }, null],\n      });\n\n      expect(await generator2.next()).toEqual(gen1Next);\n\n      let error: unknown;\n      try {\n        await generator1.next();\n        fail('should throw');\n      } catch (e) {\n        error = e;\n        expect(e).toBe(error);\n      }\n\n      try {\n        await generator2.next();\n        fail('should throw');\n      } catch (e) {\n        expect(e).toBe(error);\n      }\n    });\n  });\n});\n"],"mappings":"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"}