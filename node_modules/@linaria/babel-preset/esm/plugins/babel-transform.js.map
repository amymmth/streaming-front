{"version":3,"file":"babel-transform.js","names":["debug","syncResolve","TransformCacheCollection","transformSync","loadLinariaOptions","collector","babelTransform","babel","options","cache","name","pre","file","collect","valueCache","data","loadedAndParsed","entrypoint","pluginOptions","services","evaluator","Error","ast","code","opts","filename","root","undefined","inputSourceMap","visitor","post"],"sources":["../../src/plugins/babel-transform.ts"],"sourcesContent":["import type { BabelFile, PluginObj } from '@babel/core';\n\nimport { debug } from '@linaria/logger';\nimport { syncResolve } from '@linaria/utils';\n\nimport type { Core } from '../babel';\nimport { TransformCacheCollection } from '../cache';\nimport { transformSync } from '../transform';\nimport loadLinariaOptions from '../transform/helpers/loadLinariaOptions';\nimport type { ICollectAction, SyncScenarioForAction } from '../transform/types';\nimport type { IPluginState, PluginOptions } from '../types';\n\nimport { collector } from './collector';\n\nexport default function babelTransform(\n  babel: Core,\n  options: Partial<PluginOptions>\n): PluginObj<IPluginState> {\n  const cache = new TransformCacheCollection();\n\n  return {\n    name: '@linaria/babel/babel-transform',\n    pre(file: BabelFile) {\n      // eslint-disable-next-line require-yield\n      function* collect(\n        this: ICollectAction\n      ): SyncScenarioForAction<ICollectAction> {\n        const { valueCache } = this.data;\n        const { loadedAndParsed } = this.entrypoint;\n        const { pluginOptions } = this.services.options;\n        if (loadedAndParsed.evaluator === 'ignored') {\n          throw new Error('entrypoint was ignored');\n        }\n\n        collector(file, pluginOptions, valueCache);\n\n        return {\n          ast: loadedAndParsed.ast,\n          code: loadedAndParsed.code,\n        };\n      }\n\n      debug('babel-transform:start', file.opts.filename);\n\n      const pluginOptions = loadLinariaOptions(options);\n\n      transformSync(\n        {\n          babel,\n          cache,\n          options: {\n            filename: file.opts.filename!,\n            root: file.opts.root ?? undefined,\n            inputSourceMap: file.opts.inputSourceMap ?? undefined,\n            pluginOptions,\n          },\n        },\n        file.code,\n        syncResolve,\n        {\n          collect,\n        }\n      );\n    },\n    visitor: {},\n    post(file: BabelFile) {\n      debug('babel-transform:end', file.opts.filename);\n    },\n  };\n}\n"],"mappings":"AAEA,SAASA,KAAK,QAAQ,iBAAiB;AACvC,SAASC,WAAW,QAAQ,gBAAgB;AAG5C,SAASC,wBAAwB,QAAQ,UAAU;AACnD,SAASC,aAAa,QAAQ,cAAc;AAC5C,OAAOC,kBAAkB,MAAM,yCAAyC;AAIxE,SAASC,SAAS,QAAQ,aAAa;AAEvC,eAAe,SAASC,cAAcA,CACpCC,KAAW,EACXC,OAA+B,EACN;EACzB,MAAMC,KAAK,GAAG,IAAIP,wBAAwB,CAAC,CAAC;EAE5C,OAAO;IACLQ,IAAI,EAAE,gCAAgC;IACtCC,GAAGA,CAACC,IAAe,EAAE;MACnB;MACA,UAAUC,OAAOA,CAAA,EAEwB;QACvC,MAAM;UAAEC;QAAW,CAAC,GAAG,IAAI,CAACC,IAAI;QAChC,MAAM;UAAEC;QAAgB,CAAC,GAAG,IAAI,CAACC,UAAU;QAC3C,MAAM;UAAEC;QAAc,CAAC,GAAG,IAAI,CAACC,QAAQ,CAACX,OAAO;QAC/C,IAAIQ,eAAe,CAACI,SAAS,KAAK,SAAS,EAAE;UAC3C,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;QAC3C;QAEAhB,SAAS,CAACO,IAAI,EAAEM,aAAa,EAAEJ,UAAU,CAAC;QAE1C,OAAO;UACLQ,GAAG,EAAEN,eAAe,CAACM,GAAG;UACxBC,IAAI,EAAEP,eAAe,CAACO;QACxB,CAAC;MACH;MAEAvB,KAAK,CAAC,uBAAuB,EAAEY,IAAI,CAACY,IAAI,CAACC,QAAQ,CAAC;MAElD,MAAMP,aAAa,GAAGd,kBAAkB,CAACI,OAAO,CAAC;MAEjDL,aAAa,CACX;QACEI,KAAK;QACLE,KAAK;QACLD,OAAO,EAAE;UACPiB,QAAQ,EAAEb,IAAI,CAACY,IAAI,CAACC,QAAS;UAC7BC,IAAI,EAAEd,IAAI,CAACY,IAAI,CAACE,IAAI,IAAIC,SAAS;UACjCC,cAAc,EAAEhB,IAAI,CAACY,IAAI,CAACI,cAAc,IAAID,SAAS;UACrDT;QACF;MACF,CAAC,EACDN,IAAI,CAACW,IAAI,EACTtB,WAAW,EACX;QACEY;MACF,CACF,CAAC;IACH,CAAC;IACDgB,OAAO,EAAE,CAAC,CAAC;IACXC,IAAIA,CAAClB,IAAe,EAAE;MACpBZ,KAAK,CAAC,qBAAqB,EAAEY,IAAI,CAACY,IAAI,CAACC,QAAQ,CAAC;IAClD;EACF,CAAC;AACH"}