{"version":3,"file":"collect.js","names":["_utils","require","_collector","_withLinariaMetadata","collect","_result$ast","babel","options","services","valueCache","data","entrypoint","loadedAndParsed","name","evaluator","Error","transformPlugins","collectorPlugin","pluginOptions","values","transformConfig","buildOptions","envName","plugins","sourceMaps","sourceFileName","inputSourceMap","root","ast","babelrc","configFile","sourceType","result","transformFromAstSync","code","cwd","filename","program","linariaMetadata","getLinariaMetadata","metadata","map"],"sources":["../../../src/transform/generators/collect.ts"],"sourcesContent":["import type { PluginItem } from '@babel/core';\n\nimport { buildOptions } from '@linaria/utils';\n\nimport { filename as collectorPlugin } from '../../plugins/collector';\nimport { getLinariaMetadata } from '../../utils/withLinariaMetadata';\nimport type { ICollectAction, SyncScenarioForAction } from '../types';\n\n/**\n * Parses the specified file, finds tags, applies run-time replacements,\n * removes dead code.\n */\n// eslint-disable-next-line require-yield\nexport function* collect(\n  this: ICollectAction\n): SyncScenarioForAction<ICollectAction> {\n  const { babel, options } = this.services;\n  const { valueCache } = this.data;\n  const { entrypoint } = this;\n  const { loadedAndParsed, name } = entrypoint;\n\n  if (loadedAndParsed.evaluator === 'ignored') {\n    throw new Error('entrypoint was ignored');\n  }\n\n  const transformPlugins: PluginItem[] = [\n    [\n      collectorPlugin,\n      {\n        ...options.pluginOptions,\n        values: valueCache,\n      },\n    ],\n  ];\n\n  const transformConfig = buildOptions({\n    envName: 'linaria',\n    plugins: transformPlugins,\n    sourceMaps: true,\n    sourceFileName: name,\n    inputSourceMap: options.inputSourceMap,\n    root: options.root,\n    ast: true,\n    babelrc: false,\n    configFile: false,\n    sourceType: 'unambiguous',\n  });\n\n  const result = babel.transformFromAstSync(\n    loadedAndParsed.ast,\n    loadedAndParsed.code,\n    {\n      ...transformConfig,\n      cwd: options.root,\n      filename: name,\n    }\n  );\n\n  if (!result || !result.ast?.program) {\n    throw new Error('Babel transform failed');\n  }\n\n  const linariaMetadata = getLinariaMetadata(result.metadata);\n\n  return {\n    ast: result.ast,\n    code: result.code,\n    map: result.map,\n    metadata: linariaMetadata ?? null,\n  };\n}\n"],"mappings":";;;;;;AAEA,IAAAA,MAAA,GAAAC,OAAA;AAEA,IAAAC,UAAA,GAAAD,OAAA;AACA,IAAAE,oBAAA,GAAAF,OAAA;AAGA;AACA;AACA;AACA;AACA;AACO,UAAUG,OAAOA,CAAA,EAEiB;EAAA,IAAAC,WAAA;EACvC,MAAM;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAG,IAAI,CAACC,QAAQ;EACxC,MAAM;IAAEC;EAAW,CAAC,GAAG,IAAI,CAACC,IAAI;EAChC,MAAM;IAAEC;EAAW,CAAC,GAAG,IAAI;EAC3B,MAAM;IAAEC,eAAe;IAAEC;EAAK,CAAC,GAAGF,UAAU;EAE5C,IAAIC,eAAe,CAACE,SAAS,KAAK,SAAS,EAAE;IAC3C,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EAC3C;EAEA,MAAMC,gBAA8B,GAAG,CACrC,CACEC,mBAAe,EACf;IACE,GAAGV,OAAO,CAACW,aAAa;IACxBC,MAAM,EAAEV;EACV,CAAC,CACF,CACF;EAED,MAAMW,eAAe,GAAG,IAAAC,mBAAY,EAAC;IACnCC,OAAO,EAAE,SAAS;IAClBC,OAAO,EAAEP,gBAAgB;IACzBQ,UAAU,EAAE,IAAI;IAChBC,cAAc,EAAEZ,IAAI;IACpBa,cAAc,EAAEnB,OAAO,CAACmB,cAAc;IACtCC,IAAI,EAAEpB,OAAO,CAACoB,IAAI;IAClBC,GAAG,EAAE,IAAI;IACTC,OAAO,EAAE,KAAK;IACdC,UAAU,EAAE,KAAK;IACjBC,UAAU,EAAE;EACd,CAAC,CAAC;EAEF,MAAMC,MAAM,GAAG1B,KAAK,CAAC2B,oBAAoB,CACvCrB,eAAe,CAACgB,GAAG,EACnBhB,eAAe,CAACsB,IAAI,EACpB;IACE,GAAGd,eAAe;IAClBe,GAAG,EAAE5B,OAAO,CAACoB,IAAI;IACjBS,QAAQ,EAAEvB;EACZ,CACF,CAAC;EAED,IAAI,CAACmB,MAAM,IAAI,GAAA3B,WAAA,GAAC2B,MAAM,CAACJ,GAAG,cAAAvB,WAAA,eAAVA,WAAA,CAAYgC,OAAO,GAAE;IACnC,MAAM,IAAItB,KAAK,CAAC,wBAAwB,CAAC;EAC3C;EAEA,MAAMuB,eAAe,GAAG,IAAAC,uCAAkB,EAACP,MAAM,CAACQ,QAAQ,CAAC;EAE3D,OAAO;IACLZ,GAAG,EAAEI,MAAM,CAACJ,GAAG;IACfM,IAAI,EAAEF,MAAM,CAACE,IAAI;IACjBO,GAAG,EAAET,MAAM,CAACS,GAAG;IACfD,QAAQ,EAAEF,eAAe,aAAfA,eAAe,cAAfA,eAAe,GAAI;EAC/B,CAAC;AACH"}