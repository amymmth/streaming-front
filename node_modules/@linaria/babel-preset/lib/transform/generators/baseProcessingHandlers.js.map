{"version":3,"file":"baseProcessingHandlers.js","names":["_explodeReexports","require","_getExports","_processEntrypoint","_processImports","_transform","emptyHandler","Error","type","baseProcessingHandlers","collect","evalFile","extract","workflow","explodeReexports","getExports","processEntrypoint","processImports","transform","exports"],"sources":["../../../src/transform/generators/baseProcessingHandlers.ts"],"sourcesContent":["import type {\n  SyncScenarioForAction,\n  ICollectAction,\n  IEvalAction,\n  IExtractAction,\n  IWorkflowAction,\n  ActionQueueItem,\n} from '../types';\n\nimport { explodeReexports } from './explodeReexports';\nimport { getExports } from './getExports';\nimport { processEntrypoint } from './processEntrypoint';\nimport { processImports } from './processImports';\nimport { transform } from './transform';\n\n// eslint-disable-next-line require-yield\nfunction* emptyHandler<T extends ActionQueueItem>(\n  this: T\n): SyncScenarioForAction<T> {\n  throw new Error(`Handler for ${this.type} is not implemented`);\n}\n\nexport const baseProcessingHandlers = {\n  collect: emptyHandler<ICollectAction>,\n  evalFile: emptyHandler<IEvalAction>,\n  extract: emptyHandler<IExtractAction>,\n  workflow: emptyHandler<IWorkflowAction>,\n  explodeReexports,\n  getExports,\n  processEntrypoint,\n  processImports,\n  transform,\n};\n"],"mappings":";;;;;;AASA,IAAAA,iBAAA,GAAAC,OAAA;AACA,IAAAC,WAAA,GAAAD,OAAA;AACA,IAAAE,kBAAA,GAAAF,OAAA;AACA,IAAAG,eAAA,GAAAH,OAAA;AACA,IAAAI,UAAA,GAAAJ,OAAA;AAEA;AACA,UAAUK,YAAYA,CAAA,EAEM;EAC1B,MAAM,IAAIC,KAAK,CAAE,eAAc,IAAI,CAACC,IAAK,qBAAoB,CAAC;AAChE;AAEO,MAAMC,sBAAsB,GAAG;EACpCC,OAAO,EAAEJ,YAA4B;EACrCK,QAAQ,EAAEL,YAAyB;EACnCM,OAAO,EAAEN,YAA4B;EACrCO,QAAQ,EAAEP,YAA6B;EACvCQ,gBAAgB,EAAhBA,kCAAgB;EAChBC,UAAU,EAAVA,sBAAU;EACVC,iBAAiB,EAAjBA,oCAAiB;EACjBC,cAAc,EAAdA,8BAAc;EACdC,SAAS,EAATA;AACF,CAAC;AAACC,OAAA,CAAAV,sBAAA,GAAAA,sBAAA"}