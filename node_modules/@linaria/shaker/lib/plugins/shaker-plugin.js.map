{"version":3,"file":"shaker-plugin.js","names":["_logger","require","_utils","_shouldKeepSideEffect","_interopRequireDefault","obj","__esModule","default","getBindingForExport","exportPath","isIdentifier","scope","getBinding","node","name","variableDeclarator","findParent","p","isVariableDeclarator","id","get","isAssignmentExpression","left","isFunctionDeclaration","isClassDeclaration","undefined","withoutRemoved","items","filter","local","isRemoved","rearrangeExports","types","t","root","exportRefs","exports","rearranged","rootScope","forEach","refs","length","declarator","uid","generateUid","declaration","unshiftContainer","variableDeclaration","identifier","registerDeclaration","ref","replaced","replaceWith","isBindingIdentifier","_replaced$parentPath","registerConstantViolation","parentPath","reference","pushed","pushContainer","expressionStatement","assignmentExpression","memberExpression","shakerPlugin","babel","keepSideEffects","ifUnknownExport","onlyExports","pre","file","filename","opts","log","createCustomDebug","getFileIdx","join","onlyExportsSet","Set","collected","collectExportsAndImports","path","sideEffectImports","imports","sideEffectImport","Object","values","reexports","hasLinariaPreval","__linariaPreval","hasDefault","has","delete","size","deadExports","keys","remove","importedAsSideEffect","isEsModule","add","aliveExports","importNames","map","imported","entries","exported","includes","some","alive","exp","exportToPath","Map","set","notFoundExports","clear","isAllExportsFound","Error","forDeleting","i","shouldKeepSideEffect","source","push","deleted","dereferenced","changed","binding","action","findActionForNode","parent","outerReferences","referencePaths","isAncestor","dereference","applyAction","removeWithRelated","visitor","post","processedImports","addImport","metadata","linariaEvaluator","invalidateTraversalCache"],"sources":["../../src/plugins/shaker-plugin.ts"],"sourcesContent":["import type core from '@babel/core';\nimport type { BabelFile, PluginObj, NodePath } from '@babel/core';\nimport type { Binding } from '@babel/traverse';\nimport type {\n  Identifier,\n  MemberExpression,\n  Program,\n  VariableDeclarator,\n} from '@babel/types';\n\nimport { createCustomDebug } from '@linaria/logger';\nimport type { Exports, IMetadata, IState } from '@linaria/utils';\nimport {\n  applyAction,\n  collectExportsAndImports,\n  dereference,\n  findActionForNode,\n  getFileIdx,\n  invalidateTraversalCache,\n  isRemoved,\n  reference,\n  removeWithRelated,\n  sideEffectImport,\n} from '@linaria/utils';\n\nimport shouldKeepSideEffect from './utils/shouldKeepSideEffect';\n\ntype Core = typeof core;\n\nexport interface IShakerOptions {\n  ifUnknownExport?: 'error' | 'ignore' | 'reexport-all' | 'skip-shaking';\n  keepSideEffects?: boolean;\n  onlyExports: string[];\n}\n\ninterface NodeWithName {\n  name: string;\n}\n\nfunction getBindingForExport(exportPath: NodePath): Binding | undefined {\n  if (exportPath.isIdentifier()) {\n    return exportPath.scope.getBinding(exportPath.node.name);\n  }\n\n  const variableDeclarator = exportPath.findParent((p) =>\n    p.isVariableDeclarator()\n  ) as NodePath<VariableDeclarator> | undefined;\n  if (variableDeclarator) {\n    const id = variableDeclarator.get('id');\n    if (id.isIdentifier()) {\n      return variableDeclarator.scope.getBinding(id.node.name);\n    }\n  }\n\n  if (exportPath.isAssignmentExpression()) {\n    const left = exportPath.get('left');\n    if (left.isIdentifier()) {\n      return exportPath.scope.getBinding(left.node.name);\n    }\n  }\n\n  if (exportPath.isFunctionDeclaration() || exportPath.isClassDeclaration()) {\n    return exportPath.scope.getBinding(exportPath.node.id!.name);\n  }\n\n  return undefined;\n}\n\nconst withoutRemoved = <T extends { local: NodePath }>(items: T[]): T[] =>\n  items.filter(({ local }) => !isRemoved(local));\n\nfunction rearrangeExports(\n  { types: t }: Core,\n  root: NodePath<Program>,\n  exportRefs: Map<string, NodePath<MemberExpression>[]>,\n  exports: Exports\n): Exports {\n  const rearranged = {\n    ...exports,\n  };\n\n  const rootScope = root.scope;\n  exportRefs.forEach((refs, name) => {\n    if (refs.length <= 1) {\n      if (refs.length === 1) {\n        // Maybe exports is assigned to another variable?\n        const declarator = refs[0].findParent((p) =>\n          p.isVariableDeclarator()\n        ) as NodePath<VariableDeclarator> | undefined;\n\n        if (!declarator) {\n          return;\n        }\n      } else {\n        return;\n      }\n    }\n\n    const uid = rootScope.generateUid(name);\n    // Define variable in the beginning\n    const [declaration] = root.unshiftContainer('body', [\n      t.variableDeclaration('var', [t.variableDeclarator(t.identifier(uid))]),\n    ]);\n\n    rootScope.registerDeclaration(declaration);\n\n    // Replace every reference with defined variable\n    refs.forEach((ref) => {\n      const [replaced] = ref.replaceWith(t.identifier(uid));\n      if (replaced.isBindingIdentifier()) {\n        rootScope.registerConstantViolation(replaced);\n        if (replaced.parentPath?.parentPath?.isVariableDeclarator()) {\n          // This is `const foo = exports.foo = \"value\"` case\n          reference(replaced, replaced, true);\n        }\n      } else {\n        reference(replaced);\n      }\n    });\n\n    // Assign defined variable to the export\n    const [pushed] = root.pushContainer('body', [\n      t.expressionStatement(\n        t.assignmentExpression(\n          '=',\n          t.memberExpression(t.identifier('exports'), t.identifier(name)),\n          t.identifier(uid)\n        )\n      ),\n    ]);\n\n    const local = pushed.get('expression.right') as NodePath<Identifier>;\n    reference(local);\n\n    rearranged[name] = local;\n  });\n\n  return rearranged;\n}\n\nexport default function shakerPlugin(\n  babel: Core,\n  {\n    keepSideEffects = false,\n    ifUnknownExport = 'skip-shaking',\n    onlyExports,\n  }: IShakerOptions\n): PluginObj<IState & { filename: string }> {\n  return {\n    name: '@linaria/shaker',\n    pre(file: BabelFile) {\n      this.filename = file.opts.filename!;\n      const log = createCustomDebug('shaker', getFileIdx(this.filename));\n\n      log('start', `${this.filename}, onlyExports: ${onlyExports.join(',')}`);\n      const onlyExportsSet = new Set(onlyExports);\n\n      const collected = collectExportsAndImports(file.path);\n      const sideEffectImports = collected.imports.filter(sideEffectImport);\n      log(\n        'import-and-exports',\n        [\n          `imports: ${collected.imports.length} (side-effects: ${sideEffectImports.length})`,\n          `exports: ${Object.values(collected.exports).length}`,\n          `reexports: ${collected.reexports.length}`,\n        ].join(', ')\n      );\n\n      // We cannot just throw out exports if they are referred in the code\n      // Let's dome some replacements\n      const exports = rearrangeExports(\n        babel,\n        file.path,\n        collected.exportRefs,\n        collected.exports\n      );\n\n      Object.values(exports).forEach((local) => {\n        if (local.isAssignmentExpression()) {\n          const left = local.get('left');\n          if (left.isIdentifier()) {\n            // For some reason babel does not mark id in AssignmentExpression as a reference\n            // So we need to do it manually\n            reference(left, left, true);\n          }\n        }\n      });\n\n      const hasLinariaPreval = exports.__linariaPreval !== undefined;\n      const hasDefault = exports.default !== undefined;\n\n      // If __linariaPreval is not exported, we can remove it from onlyExports\n      if (onlyExportsSet.has('__linariaPreval') && !hasLinariaPreval) {\n        onlyExportsSet.delete('__linariaPreval');\n      }\n\n      if (onlyExportsSet.size === 0) {\n        // Fast-lane: if there are no exports to keep, we can just shake out the whole file\n        this.imports = [];\n        this.exports = {};\n        this.reexports = [];\n        this.deadExports = Object.keys(exports);\n\n        file.path.get('body').forEach((p) => {\n          p.remove();\n        });\n\n        return;\n      }\n\n      const importedAsSideEffect = onlyExportsSet.has('side-effect');\n      onlyExportsSet.delete('side-effect');\n\n      // Hackaround for packages which include a 'default' export without specifying __esModule; such packages cannot be\n      // shaken as they will break interopRequireDefault babel helper\n      // See example in shaker-plugin.test.ts\n      // Real-world example was found in preact/compat npm package\n      if (\n        onlyExportsSet.has('default') &&\n        hasDefault &&\n        !collected.isEsModule\n      ) {\n        this.imports = collected.imports;\n        this.exports = exports;\n        this.reexports = collected.reexports;\n        this.deadExports = [];\n        return;\n      }\n\n      if (!onlyExportsSet.has('*')) {\n        // __esModule should be kept alive\n        onlyExportsSet.add('__esModule');\n\n        const aliveExports = new Set<NodePath>();\n        const importNames = collected.imports.map(({ imported }) => imported);\n\n        Object.entries(exports).forEach(([exported, local]) => {\n          if (onlyExportsSet.has(exported)) {\n            aliveExports.add(local);\n          } else if (\n            importNames.includes((local.node as NodeWithName).name || '')\n          ) {\n            aliveExports.add(local);\n          } else if ([...aliveExports].some((alive) => alive === local)) {\n            // It's possible to export multiple values from a single variable initializer, e.g\n            // export const { foo, bar } = baz();\n            // We need to treat all of them as used if any of them are used, since otherwise\n            // we'll attempt to delete the baz() call\n            aliveExports.add(local);\n          }\n        });\n\n        collected.reexports.forEach((exp) => {\n          if (onlyExportsSet.has(exp.exported)) {\n            aliveExports.add(exp.local);\n          }\n        });\n\n        const exportToPath = new Map<string, NodePath>();\n        Object.entries(exports).forEach(([exported, local]) => {\n          exportToPath.set(exported, local);\n        });\n\n        collected.reexports.forEach((exp) => {\n          exportToPath.set(exp.exported, exp.local);\n        });\n\n        const notFoundExports = [...onlyExportsSet].filter(\n          (exp) =>\n            exp !== '__esModule' && !aliveExports.has(exportToPath.get(exp)!)\n        );\n        exportToPath.clear();\n\n        const isAllExportsFound = notFoundExports.length === 0;\n        if (!isAllExportsFound && ifUnknownExport !== 'ignore') {\n          if (ifUnknownExport === 'error') {\n            throw new Error(\n              `Unknown export(s) requested: ${onlyExports.join(',')}`\n            );\n          }\n\n          if (ifUnknownExport === 'reexport-all') {\n            // If there are unknown exports, we have keep alive all re-exports.\n            if (exports['*'] !== undefined) {\n              aliveExports.add(exports['*']);\n            }\n\n            collected.reexports.forEach((exp) => {\n              if (exp.exported === '*') {\n                aliveExports.add(exp.local);\n              }\n            });\n          }\n\n          if (ifUnknownExport === 'skip-shaking') {\n            this.imports = collected.imports;\n            this.exports = exports;\n            this.reexports = collected.reexports;\n            this.deadExports = [];\n\n            return;\n          }\n        }\n\n        const forDeleting = [\n          ...Object.values(exports),\n          ...collected.reexports.map((i) => i.local),\n        ].filter((exp) => !aliveExports.has(exp));\n\n        if (!keepSideEffects && !importedAsSideEffect) {\n          // Remove all imports that don't import something explicitly and should not be kept\n          sideEffectImports.forEach((i) => {\n            if (!shouldKeepSideEffect(i.source)) {\n              forDeleting.push(i.local);\n            }\n          });\n        }\n\n        const deleted = new Set<NodePath>();\n\n        let dereferenced: NodePath<Identifier>[] = [];\n        let changed = true;\n        while (changed && deleted.size < forDeleting.length) {\n          changed = false;\n          // eslint-disable-next-line no-restricted-syntax\n          for (const path of forDeleting) {\n            if (deleted.has(path)) {\n              // eslint-disable-next-line no-continue\n              continue;\n            }\n\n            const binding = getBindingForExport(path);\n            const action = findActionForNode(path);\n            const parent = action?.[1];\n            const outerReferences = (binding?.referencePaths || []).filter(\n              (ref) => ref !== parent && !parent?.isAncestor(ref)\n            );\n            if (outerReferences.length > 0 && path.isIdentifier()) {\n              // Temporary deref it in order to simplify further checks.\n              dereference(path);\n              dereferenced.push(path);\n            }\n\n            if (\n              !deleted.has(path) &&\n              (!binding || outerReferences.length === 0)\n            ) {\n              if (action) {\n                applyAction(action);\n              } else {\n                removeWithRelated([path]);\n              }\n\n              deleted.add(path);\n              changed = true;\n            }\n          }\n\n          dereferenced.forEach((path) => {\n            // If path is still alive, we need to reference it back\n            if (!isRemoved(path)) {\n              reference(path);\n            }\n          });\n\n          dereferenced = [];\n        }\n      }\n\n      this.imports = withoutRemoved(collected.imports);\n      this.exports = {};\n      this.deadExports = [];\n\n      Object.entries(exports).forEach(([exported, local]) => {\n        if (isRemoved(local)) {\n          this.deadExports.push(exported);\n        } else {\n          this.exports[exported] = local;\n        }\n      });\n\n      this.reexports = withoutRemoved(collected.reexports);\n    },\n    visitor: {},\n    post(file: BabelFile) {\n      const log = createCustomDebug('shaker', getFileIdx(file.opts.filename!));\n\n      const processedImports = new Set<string>();\n      const imports = new Map<string, string[]>();\n      const addImport = ({\n        imported,\n        source,\n      }: {\n        imported: string;\n        source: string;\n      }) => {\n        if (processedImports.has(`${source}:${imported}`)) {\n          return;\n        }\n\n        if (!imports.has(source)) {\n          imports.set(source, []);\n        }\n\n        if (imported) {\n          imports.get(source)!.push(imported);\n        }\n\n        processedImports.add(`${source}:${imported}`);\n      };\n\n      this.imports.forEach(addImport);\n      this.reexports.forEach(addImport);\n\n      log('end', `remaining imports: %O`, imports);\n\n      // eslint-disable-next-line no-param-reassign\n      (file.metadata as IMetadata).linariaEvaluator = {\n        imports,\n      };\n\n      invalidateTraversalCache(file.path);\n    },\n  };\n}\n"],"mappings":"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"}