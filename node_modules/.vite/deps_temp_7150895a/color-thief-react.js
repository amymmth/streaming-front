import {
  require_react
} from "./chunk-QJTFJ6OV.js";
import {
  __commonJS,
  __esm,
  __export,
  __toCommonJS
} from "./chunk-V4OQ3NZ2.js";

// node_modules/color-thief-react/node_modules/tslib/tslib.es6.js
var tslib_es6_exports = {};
__export(tslib_es6_exports, {
  __assign: () => __assign,
  __asyncDelegator: () => __asyncDelegator,
  __asyncGenerator: () => __asyncGenerator,
  __asyncValues: () => __asyncValues,
  __await: () => __await,
  __awaiter: () => __awaiter,
  __classPrivateFieldGet: () => __classPrivateFieldGet,
  __classPrivateFieldSet: () => __classPrivateFieldSet,
  __createBinding: () => __createBinding,
  __decorate: () => __decorate,
  __exportStar: () => __exportStar,
  __extends: () => __extends,
  __generator: () => __generator,
  __importDefault: () => __importDefault,
  __importStar: () => __importStar,
  __makeTemplateObject: () => __makeTemplateObject,
  __metadata: () => __metadata,
  __param: () => __param,
  __read: () => __read,
  __rest: () => __rest,
  __spread: () => __spread,
  __spreadArray: () => __spreadArray,
  __spreadArrays: () => __spreadArrays,
  __values: () => __values
});
function __extends(d, b) {
  if (typeof b !== "function" && b !== null)
    throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
  extendStatics(d, b);
  function __() {
    this.constructor = d;
  }
  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}
function __rest(s, e) {
  var t = {};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
    t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i2 = 0, p = Object.getOwnPropertySymbols(s); i2 < p.length; i2++) {
      if (e.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i2]))
        t[p[i2]] = s[p[i2]];
    }
  return t;
}
function __decorate(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i2 = decorators.length - 1; i2 >= 0; i2--) if (d = decorators[i2]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
}
function __param(paramIndex, decorator) {
  return function(target, key) {
    decorator(target, key, paramIndex);
  };
}
function __metadata(metadataKey, metadataValue) {
  if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator(thisArg, body) {
  var _ = { label: 0, sent: function() {
    if (t[0] & 1) throw t[1];
    return t[1];
  }, trys: [], ops: [] }, f, y, t, g;
  return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
    return this;
  }), g;
  function verb(n) {
    return function(v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");
    while (_) try {
      if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
      if (y = 0, t) op = [op[0] & 2, t.value];
      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;
        case 4:
          _.label++;
          return { value: op[1], done: false };
        case 5:
          _.label++;
          y = op[1];
          op = [0];
          continue;
        case 7:
          op = _.ops.pop();
          _.trys.pop();
          continue;
        default:
          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _ = 0;
            continue;
          }
          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _.label = op[1];
            break;
          }
          if (op[0] === 6 && _.label < t[1]) {
            _.label = t[1];
            t = op;
            break;
          }
          if (t && _.label < t[2]) {
            _.label = t[2];
            _.ops.push(op);
            break;
          }
          if (t[2]) _.ops.pop();
          _.trys.pop();
          continue;
      }
      op = body.call(thisArg, _);
    } catch (e) {
      op = [6, e];
      y = 0;
    } finally {
      f = t = 0;
    }
    if (op[0] & 5) throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
}
function __exportStar(m, o) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
}
function __values(o) {
  var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i2 = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function() {
      if (o && i2 >= o.length) o = void 0;
      return { value: o && o[i2++], done: !o };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i2 = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i2.next()).done) ar.push(r.value);
  } catch (error) {
    e = { error };
  } finally {
    try {
      if (r && !r.done && (m = i2["return"])) m.call(i2);
    } finally {
      if (e) throw e.error;
    }
  }
  return ar;
}
function __spread() {
  for (var ar = [], i2 = 0; i2 < arguments.length; i2++)
    ar = ar.concat(__read(arguments[i2]));
  return ar;
}
function __spreadArrays() {
  for (var s = 0, i2 = 0, il = arguments.length; i2 < il; i2++) s += arguments[i2].length;
  for (var r = Array(s), k = 0, i2 = 0; i2 < il; i2++)
    for (var a = arguments[i2], j = 0, jl = a.length; j < jl; j++, k++)
      r[k] = a[j];
  return r;
}
function __spreadArray(to, from, pack) {
  if (pack || arguments.length === 2) for (var i2 = 0, l = from.length, ar; i2 < l; i2++) {
    if (ar || !(i2 in from)) {
      if (!ar) ar = Array.prototype.slice.call(from, 0, i2);
      ar[i2] = from[i2];
    }
  }
  return to.concat(ar || from);
}
function __await(v) {
  return this instanceof __await ? (this.v = v, this) : new __await(v);
}
function __asyncGenerator(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var g = generator.apply(thisArg, _arguments || []), i2, q = [];
  return i2 = {}, verb("next"), verb("throw"), verb("return"), i2[Symbol.asyncIterator] = function() {
    return this;
  }, i2;
  function verb(n) {
    if (g[n]) i2[n] = function(v) {
      return new Promise(function(a, b) {
        q.push([n, v, a, b]) > 1 || resume(n, v);
      });
    };
  }
  function resume(n, v) {
    try {
      step(g[n](v));
    } catch (e) {
      settle(q[0][3], e);
    }
  }
  function step(r) {
    r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
  }
  function fulfill(value) {
    resume("next", value);
  }
  function reject(value) {
    resume("throw", value);
  }
  function settle(f, v) {
    if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
  }
}
function __asyncDelegator(o) {
  var i2, p;
  return i2 = {}, verb("next"), verb("throw", function(e) {
    throw e;
  }), verb("return"), i2[Symbol.iterator] = function() {
    return this;
  }, i2;
  function verb(n, f) {
    i2[n] = o[n] ? function(v) {
      return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v;
    } : f;
  }
}
function __asyncValues(o) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var m = o[Symbol.asyncIterator], i2;
  return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i2 = {}, verb("next"), verb("throw"), verb("return"), i2[Symbol.asyncIterator] = function() {
    return this;
  }, i2);
  function verb(n) {
    i2[n] = o[n] && function(v) {
      return new Promise(function(resolve, reject) {
        v = o[n](v), settle(resolve, reject, v.done, v.value);
      });
    };
  }
  function settle(resolve, reject, d, v) {
    Promise.resolve(v).then(function(v2) {
      resolve({ value: v2, done: d });
    }, reject);
  }
}
function __makeTemplateObject(cooked, raw) {
  if (Object.defineProperty) {
    Object.defineProperty(cooked, "raw", { value: raw });
  } else {
    cooked.raw = raw;
  }
  return cooked;
}
function __importStar(mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) {
    for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
  }
  __setModuleDefault(result, mod);
  return result;
}
function __importDefault(mod) {
  return mod && mod.__esModule ? mod : { default: mod };
}
function __classPrivateFieldGet(receiver, state, kind, f) {
  if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
  if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
  return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
}
function __classPrivateFieldSet(receiver, state, value, kind, f) {
  if (kind === "m") throw new TypeError("Private method is not writable");
  if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
  if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
  return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;
}
var extendStatics, __assign, __createBinding, __setModuleDefault;
var init_tslib_es6 = __esm({
  "node_modules/color-thief-react/node_modules/tslib/tslib.es6.js"() {
    extendStatics = function(d, b) {
      extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
        d2.__proto__ = b2;
      } || function(d2, b2) {
        for (var p in b2) if (Object.prototype.hasOwnProperty.call(b2, p)) d2[p] = b2[p];
      };
      return extendStatics(d, b);
    };
    __assign = function() {
      __assign = Object.assign || function __assign2(t) {
        for (var s, i2 = 1, n = arguments.length; i2 < n; i2++) {
          s = arguments[i2];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    __createBinding = Object.create ? function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      Object.defineProperty(o, k2, { enumerable: true, get: function() {
        return m[k];
      } });
    } : function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    };
    __setModuleDefault = Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    };
  }
});

// node_modules/color-thief-react/node_modules/use-current-effect/dist/useCurrentEffect.js
var require_useCurrentEffect = __commonJS({
  "node_modules/color-thief-react/node_modules/use-current-effect/dist/useCurrentEffect.js"(exports) {
    "use strict";
    exports.__esModule = true;
    var react_1 = require_react();
    function useCurrentEffect(callback, deps) {
      react_1.useEffect(function() {
        var isCurrent = true;
        var currentCheck = function() {
          return isCurrent;
        };
        var cleanup = callback(currentCheck);
        return function() {
          isCurrent = false;
          cleanup && cleanup();
        };
      }, deps);
    }
    exports.useCurrentEffect = useCurrentEffect;
  }
});

// node_modules/color-thief-react/node_modules/use-current-effect/dist/useCurrentCallback.js
var require_useCurrentCallback = __commonJS({
  "node_modules/color-thief-react/node_modules/use-current-effect/dist/useCurrentCallback.js"(exports) {
    "use strict";
    exports.__esModule = true;
    var react_1 = require_react();
    function useCurrentCallback(callbackFactory, deps) {
      var isCurrent = true;
      var currentCheck = function() {
        return isCurrent;
      };
      react_1.useEffect(function() {
        return function() {
          isCurrent = false;
        };
      }, deps);
      return react_1.useCallback(callbackFactory(currentCheck), deps);
    }
    exports.useCurrentCallback = useCurrentCallback;
  }
});

// node_modules/color-thief-react/node_modules/use-current-effect/dist/index.js
var require_dist = __commonJS({
  "node_modules/color-thief-react/node_modules/use-current-effect/dist/index.js"(exports) {
    "use strict";
    function __export2(m) {
      for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }
    exports.__esModule = true;
    __export2(require_useCurrentEffect());
    __export2(require_useCurrentCallback());
  }
});

// node_modules/color-thief-react/lib/utils/initialReducerState.js
var require_initialReducerState = __commonJS({
  "node_modules/color-thief-react/lib/utils/initialReducerState.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var initialReducerState = {
      loading: true,
      data: void 0,
      error: void 0
    };
    exports.default = initialReducerState;
  }
});

// node_modules/color-thief-react/lib/utils/reducer.js
var require_reducer = __commonJS({
  "node_modules/color-thief-react/lib/utils/reducer.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var initialReducerState_1 = tslib_1.__importDefault(require_initialReducerState());
    function reducer(state, action) {
      var responses = {
        start: function() {
          return initialReducerState_1.default;
        },
        resolve: function() {
          return tslib_1.__assign(tslib_1.__assign({}, state), { data: action.payload, loading: false });
        },
        reject: function() {
          return tslib_1.__assign(tslib_1.__assign({}, state), { error: action.payload, loading: false });
        }
      };
      return responses[action.type]();
    }
    exports.default = reducer;
  }
});

// node_modules/color-name/index.js
var require_color_name = __commonJS({
  "node_modules/color-name/index.js"(exports, module) {
    "use strict";
    module.exports = {
      "aliceblue": [240, 248, 255],
      "antiquewhite": [250, 235, 215],
      "aqua": [0, 255, 255],
      "aquamarine": [127, 255, 212],
      "azure": [240, 255, 255],
      "beige": [245, 245, 220],
      "bisque": [255, 228, 196],
      "black": [0, 0, 0],
      "blanchedalmond": [255, 235, 205],
      "blue": [0, 0, 255],
      "blueviolet": [138, 43, 226],
      "brown": [165, 42, 42],
      "burlywood": [222, 184, 135],
      "cadetblue": [95, 158, 160],
      "chartreuse": [127, 255, 0],
      "chocolate": [210, 105, 30],
      "coral": [255, 127, 80],
      "cornflowerblue": [100, 149, 237],
      "cornsilk": [255, 248, 220],
      "crimson": [220, 20, 60],
      "cyan": [0, 255, 255],
      "darkblue": [0, 0, 139],
      "darkcyan": [0, 139, 139],
      "darkgoldenrod": [184, 134, 11],
      "darkgray": [169, 169, 169],
      "darkgreen": [0, 100, 0],
      "darkgrey": [169, 169, 169],
      "darkkhaki": [189, 183, 107],
      "darkmagenta": [139, 0, 139],
      "darkolivegreen": [85, 107, 47],
      "darkorange": [255, 140, 0],
      "darkorchid": [153, 50, 204],
      "darkred": [139, 0, 0],
      "darksalmon": [233, 150, 122],
      "darkseagreen": [143, 188, 143],
      "darkslateblue": [72, 61, 139],
      "darkslategray": [47, 79, 79],
      "darkslategrey": [47, 79, 79],
      "darkturquoise": [0, 206, 209],
      "darkviolet": [148, 0, 211],
      "deeppink": [255, 20, 147],
      "deepskyblue": [0, 191, 255],
      "dimgray": [105, 105, 105],
      "dimgrey": [105, 105, 105],
      "dodgerblue": [30, 144, 255],
      "firebrick": [178, 34, 34],
      "floralwhite": [255, 250, 240],
      "forestgreen": [34, 139, 34],
      "fuchsia": [255, 0, 255],
      "gainsboro": [220, 220, 220],
      "ghostwhite": [248, 248, 255],
      "gold": [255, 215, 0],
      "goldenrod": [218, 165, 32],
      "gray": [128, 128, 128],
      "green": [0, 128, 0],
      "greenyellow": [173, 255, 47],
      "grey": [128, 128, 128],
      "honeydew": [240, 255, 240],
      "hotpink": [255, 105, 180],
      "indianred": [205, 92, 92],
      "indigo": [75, 0, 130],
      "ivory": [255, 255, 240],
      "khaki": [240, 230, 140],
      "lavender": [230, 230, 250],
      "lavenderblush": [255, 240, 245],
      "lawngreen": [124, 252, 0],
      "lemonchiffon": [255, 250, 205],
      "lightblue": [173, 216, 230],
      "lightcoral": [240, 128, 128],
      "lightcyan": [224, 255, 255],
      "lightgoldenrodyellow": [250, 250, 210],
      "lightgray": [211, 211, 211],
      "lightgreen": [144, 238, 144],
      "lightgrey": [211, 211, 211],
      "lightpink": [255, 182, 193],
      "lightsalmon": [255, 160, 122],
      "lightseagreen": [32, 178, 170],
      "lightskyblue": [135, 206, 250],
      "lightslategray": [119, 136, 153],
      "lightslategrey": [119, 136, 153],
      "lightsteelblue": [176, 196, 222],
      "lightyellow": [255, 255, 224],
      "lime": [0, 255, 0],
      "limegreen": [50, 205, 50],
      "linen": [250, 240, 230],
      "magenta": [255, 0, 255],
      "maroon": [128, 0, 0],
      "mediumaquamarine": [102, 205, 170],
      "mediumblue": [0, 0, 205],
      "mediumorchid": [186, 85, 211],
      "mediumpurple": [147, 112, 219],
      "mediumseagreen": [60, 179, 113],
      "mediumslateblue": [123, 104, 238],
      "mediumspringgreen": [0, 250, 154],
      "mediumturquoise": [72, 209, 204],
      "mediumvioletred": [199, 21, 133],
      "midnightblue": [25, 25, 112],
      "mintcream": [245, 255, 250],
      "mistyrose": [255, 228, 225],
      "moccasin": [255, 228, 181],
      "navajowhite": [255, 222, 173],
      "navy": [0, 0, 128],
      "oldlace": [253, 245, 230],
      "olive": [128, 128, 0],
      "olivedrab": [107, 142, 35],
      "orange": [255, 165, 0],
      "orangered": [255, 69, 0],
      "orchid": [218, 112, 214],
      "palegoldenrod": [238, 232, 170],
      "palegreen": [152, 251, 152],
      "paleturquoise": [175, 238, 238],
      "palevioletred": [219, 112, 147],
      "papayawhip": [255, 239, 213],
      "peachpuff": [255, 218, 185],
      "peru": [205, 133, 63],
      "pink": [255, 192, 203],
      "plum": [221, 160, 221],
      "powderblue": [176, 224, 230],
      "purple": [128, 0, 128],
      "rebeccapurple": [102, 51, 153],
      "red": [255, 0, 0],
      "rosybrown": [188, 143, 143],
      "royalblue": [65, 105, 225],
      "saddlebrown": [139, 69, 19],
      "salmon": [250, 128, 114],
      "sandybrown": [244, 164, 96],
      "seagreen": [46, 139, 87],
      "seashell": [255, 245, 238],
      "sienna": [160, 82, 45],
      "silver": [192, 192, 192],
      "skyblue": [135, 206, 235],
      "slateblue": [106, 90, 205],
      "slategray": [112, 128, 144],
      "slategrey": [112, 128, 144],
      "snow": [255, 250, 250],
      "springgreen": [0, 255, 127],
      "steelblue": [70, 130, 180],
      "tan": [210, 180, 140],
      "teal": [0, 128, 128],
      "thistle": [216, 191, 216],
      "tomato": [255, 99, 71],
      "turquoise": [64, 224, 208],
      "violet": [238, 130, 238],
      "wheat": [245, 222, 179],
      "white": [255, 255, 255],
      "whitesmoke": [245, 245, 245],
      "yellow": [255, 255, 0],
      "yellowgreen": [154, 205, 50]
    };
  }
});

// node_modules/color-convert/conversions.js
var require_conversions = __commonJS({
  "node_modules/color-convert/conversions.js"(exports, module) {
    var cssKeywords = require_color_name();
    var reverseKeywords = {};
    for (const key of Object.keys(cssKeywords)) {
      reverseKeywords[cssKeywords[key]] = key;
    }
    var convert = {
      rgb: { channels: 3, labels: "rgb" },
      hsl: { channels: 3, labels: "hsl" },
      hsv: { channels: 3, labels: "hsv" },
      hwb: { channels: 3, labels: "hwb" },
      cmyk: { channels: 4, labels: "cmyk" },
      xyz: { channels: 3, labels: "xyz" },
      lab: { channels: 3, labels: "lab" },
      lch: { channels: 3, labels: "lch" },
      hex: { channels: 1, labels: ["hex"] },
      keyword: { channels: 1, labels: ["keyword"] },
      ansi16: { channels: 1, labels: ["ansi16"] },
      ansi256: { channels: 1, labels: ["ansi256"] },
      hcg: { channels: 3, labels: ["h", "c", "g"] },
      apple: { channels: 3, labels: ["r16", "g16", "b16"] },
      gray: { channels: 1, labels: ["gray"] }
    };
    module.exports = convert;
    for (const model of Object.keys(convert)) {
      if (!("channels" in convert[model])) {
        throw new Error("missing channels property: " + model);
      }
      if (!("labels" in convert[model])) {
        throw new Error("missing channel labels property: " + model);
      }
      if (convert[model].labels.length !== convert[model].channels) {
        throw new Error("channel and label counts mismatch: " + model);
      }
      const { channels, labels } = convert[model];
      delete convert[model].channels;
      delete convert[model].labels;
      Object.defineProperty(convert[model], "channels", { value: channels });
      Object.defineProperty(convert[model], "labels", { value: labels });
    }
    convert.rgb.hsl = function(rgb) {
      const r = rgb[0] / 255;
      const g = rgb[1] / 255;
      const b = rgb[2] / 255;
      const min = Math.min(r, g, b);
      const max = Math.max(r, g, b);
      const delta = max - min;
      let h;
      let s;
      if (max === min) {
        h = 0;
      } else if (r === max) {
        h = (g - b) / delta;
      } else if (g === max) {
        h = 2 + (b - r) / delta;
      } else if (b === max) {
        h = 4 + (r - g) / delta;
      }
      h = Math.min(h * 60, 360);
      if (h < 0) {
        h += 360;
      }
      const l = (min + max) / 2;
      if (max === min) {
        s = 0;
      } else if (l <= 0.5) {
        s = delta / (max + min);
      } else {
        s = delta / (2 - max - min);
      }
      return [h, s * 100, l * 100];
    };
    convert.rgb.hsv = function(rgb) {
      let rdif;
      let gdif;
      let bdif;
      let h;
      let s;
      const r = rgb[0] / 255;
      const g = rgb[1] / 255;
      const b = rgb[2] / 255;
      const v = Math.max(r, g, b);
      const diff = v - Math.min(r, g, b);
      const diffc = function(c) {
        return (v - c) / 6 / diff + 1 / 2;
      };
      if (diff === 0) {
        h = 0;
        s = 0;
      } else {
        s = diff / v;
        rdif = diffc(r);
        gdif = diffc(g);
        bdif = diffc(b);
        if (r === v) {
          h = bdif - gdif;
        } else if (g === v) {
          h = 1 / 3 + rdif - bdif;
        } else if (b === v) {
          h = 2 / 3 + gdif - rdif;
        }
        if (h < 0) {
          h += 1;
        } else if (h > 1) {
          h -= 1;
        }
      }
      return [
        h * 360,
        s * 100,
        v * 100
      ];
    };
    convert.rgb.hwb = function(rgb) {
      const r = rgb[0];
      const g = rgb[1];
      let b = rgb[2];
      const h = convert.rgb.hsl(rgb)[0];
      const w = 1 / 255 * Math.min(r, Math.min(g, b));
      b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));
      return [h, w * 100, b * 100];
    };
    convert.rgb.cmyk = function(rgb) {
      const r = rgb[0] / 255;
      const g = rgb[1] / 255;
      const b = rgb[2] / 255;
      const k = Math.min(1 - r, 1 - g, 1 - b);
      const c = (1 - r - k) / (1 - k) || 0;
      const m = (1 - g - k) / (1 - k) || 0;
      const y = (1 - b - k) / (1 - k) || 0;
      return [c * 100, m * 100, y * 100, k * 100];
    };
    function comparativeDistance(x, y) {
      return (x[0] - y[0]) ** 2 + (x[1] - y[1]) ** 2 + (x[2] - y[2]) ** 2;
    }
    convert.rgb.keyword = function(rgb) {
      const reversed = reverseKeywords[rgb];
      if (reversed) {
        return reversed;
      }
      let currentClosestDistance = Infinity;
      let currentClosestKeyword;
      for (const keyword of Object.keys(cssKeywords)) {
        const value = cssKeywords[keyword];
        const distance = comparativeDistance(rgb, value);
        if (distance < currentClosestDistance) {
          currentClosestDistance = distance;
          currentClosestKeyword = keyword;
        }
      }
      return currentClosestKeyword;
    };
    convert.keyword.rgb = function(keyword) {
      return cssKeywords[keyword];
    };
    convert.rgb.xyz = function(rgb) {
      let r = rgb[0] / 255;
      let g = rgb[1] / 255;
      let b = rgb[2] / 255;
      r = r > 0.04045 ? ((r + 0.055) / 1.055) ** 2.4 : r / 12.92;
      g = g > 0.04045 ? ((g + 0.055) / 1.055) ** 2.4 : g / 12.92;
      b = b > 0.04045 ? ((b + 0.055) / 1.055) ** 2.4 : b / 12.92;
      const x = r * 0.4124 + g * 0.3576 + b * 0.1805;
      const y = r * 0.2126 + g * 0.7152 + b * 0.0722;
      const z = r * 0.0193 + g * 0.1192 + b * 0.9505;
      return [x * 100, y * 100, z * 100];
    };
    convert.rgb.lab = function(rgb) {
      const xyz = convert.rgb.xyz(rgb);
      let x = xyz[0];
      let y = xyz[1];
      let z = xyz[2];
      x /= 95.047;
      y /= 100;
      z /= 108.883;
      x = x > 8856e-6 ? x ** (1 / 3) : 7.787 * x + 16 / 116;
      y = y > 8856e-6 ? y ** (1 / 3) : 7.787 * y + 16 / 116;
      z = z > 8856e-6 ? z ** (1 / 3) : 7.787 * z + 16 / 116;
      const l = 116 * y - 16;
      const a = 500 * (x - y);
      const b = 200 * (y - z);
      return [l, a, b];
    };
    convert.hsl.rgb = function(hsl) {
      const h = hsl[0] / 360;
      const s = hsl[1] / 100;
      const l = hsl[2] / 100;
      let t2;
      let t3;
      let val;
      if (s === 0) {
        val = l * 255;
        return [val, val, val];
      }
      if (l < 0.5) {
        t2 = l * (1 + s);
      } else {
        t2 = l + s - l * s;
      }
      const t1 = 2 * l - t2;
      const rgb = [0, 0, 0];
      for (let i2 = 0; i2 < 3; i2++) {
        t3 = h + 1 / 3 * -(i2 - 1);
        if (t3 < 0) {
          t3++;
        }
        if (t3 > 1) {
          t3--;
        }
        if (6 * t3 < 1) {
          val = t1 + (t2 - t1) * 6 * t3;
        } else if (2 * t3 < 1) {
          val = t2;
        } else if (3 * t3 < 2) {
          val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;
        } else {
          val = t1;
        }
        rgb[i2] = val * 255;
      }
      return rgb;
    };
    convert.hsl.hsv = function(hsl) {
      const h = hsl[0];
      let s = hsl[1] / 100;
      let l = hsl[2] / 100;
      let smin = s;
      const lmin = Math.max(l, 0.01);
      l *= 2;
      s *= l <= 1 ? l : 2 - l;
      smin *= lmin <= 1 ? lmin : 2 - lmin;
      const v = (l + s) / 2;
      const sv = l === 0 ? 2 * smin / (lmin + smin) : 2 * s / (l + s);
      return [h, sv * 100, v * 100];
    };
    convert.hsv.rgb = function(hsv) {
      const h = hsv[0] / 60;
      const s = hsv[1] / 100;
      let v = hsv[2] / 100;
      const hi = Math.floor(h) % 6;
      const f = h - Math.floor(h);
      const p = 255 * v * (1 - s);
      const q = 255 * v * (1 - s * f);
      const t = 255 * v * (1 - s * (1 - f));
      v *= 255;
      switch (hi) {
        case 0:
          return [v, t, p];
        case 1:
          return [q, v, p];
        case 2:
          return [p, v, t];
        case 3:
          return [p, q, v];
        case 4:
          return [t, p, v];
        case 5:
          return [v, p, q];
      }
    };
    convert.hsv.hsl = function(hsv) {
      const h = hsv[0];
      const s = hsv[1] / 100;
      const v = hsv[2] / 100;
      const vmin = Math.max(v, 0.01);
      let sl;
      let l;
      l = (2 - s) * v;
      const lmin = (2 - s) * vmin;
      sl = s * vmin;
      sl /= lmin <= 1 ? lmin : 2 - lmin;
      sl = sl || 0;
      l /= 2;
      return [h, sl * 100, l * 100];
    };
    convert.hwb.rgb = function(hwb) {
      const h = hwb[0] / 360;
      let wh = hwb[1] / 100;
      let bl = hwb[2] / 100;
      const ratio = wh + bl;
      let f;
      if (ratio > 1) {
        wh /= ratio;
        bl /= ratio;
      }
      const i2 = Math.floor(6 * h);
      const v = 1 - bl;
      f = 6 * h - i2;
      if ((i2 & 1) !== 0) {
        f = 1 - f;
      }
      const n = wh + f * (v - wh);
      let r;
      let g;
      let b;
      switch (i2) {
        default:
        case 6:
        case 0:
          r = v;
          g = n;
          b = wh;
          break;
        case 1:
          r = n;
          g = v;
          b = wh;
          break;
        case 2:
          r = wh;
          g = v;
          b = n;
          break;
        case 3:
          r = wh;
          g = n;
          b = v;
          break;
        case 4:
          r = n;
          g = wh;
          b = v;
          break;
        case 5:
          r = v;
          g = wh;
          b = n;
          break;
      }
      return [r * 255, g * 255, b * 255];
    };
    convert.cmyk.rgb = function(cmyk) {
      const c = cmyk[0] / 100;
      const m = cmyk[1] / 100;
      const y = cmyk[2] / 100;
      const k = cmyk[3] / 100;
      const r = 1 - Math.min(1, c * (1 - k) + k);
      const g = 1 - Math.min(1, m * (1 - k) + k);
      const b = 1 - Math.min(1, y * (1 - k) + k);
      return [r * 255, g * 255, b * 255];
    };
    convert.xyz.rgb = function(xyz) {
      const x = xyz[0] / 100;
      const y = xyz[1] / 100;
      const z = xyz[2] / 100;
      let r;
      let g;
      let b;
      r = x * 3.2406 + y * -1.5372 + z * -0.4986;
      g = x * -0.9689 + y * 1.8758 + z * 0.0415;
      b = x * 0.0557 + y * -0.204 + z * 1.057;
      r = r > 31308e-7 ? 1.055 * r ** (1 / 2.4) - 0.055 : r * 12.92;
      g = g > 31308e-7 ? 1.055 * g ** (1 / 2.4) - 0.055 : g * 12.92;
      b = b > 31308e-7 ? 1.055 * b ** (1 / 2.4) - 0.055 : b * 12.92;
      r = Math.min(Math.max(0, r), 1);
      g = Math.min(Math.max(0, g), 1);
      b = Math.min(Math.max(0, b), 1);
      return [r * 255, g * 255, b * 255];
    };
    convert.xyz.lab = function(xyz) {
      let x = xyz[0];
      let y = xyz[1];
      let z = xyz[2];
      x /= 95.047;
      y /= 100;
      z /= 108.883;
      x = x > 8856e-6 ? x ** (1 / 3) : 7.787 * x + 16 / 116;
      y = y > 8856e-6 ? y ** (1 / 3) : 7.787 * y + 16 / 116;
      z = z > 8856e-6 ? z ** (1 / 3) : 7.787 * z + 16 / 116;
      const l = 116 * y - 16;
      const a = 500 * (x - y);
      const b = 200 * (y - z);
      return [l, a, b];
    };
    convert.lab.xyz = function(lab) {
      const l = lab[0];
      const a = lab[1];
      const b = lab[2];
      let x;
      let y;
      let z;
      y = (l + 16) / 116;
      x = a / 500 + y;
      z = y - b / 200;
      const y2 = y ** 3;
      const x2 = x ** 3;
      const z2 = z ** 3;
      y = y2 > 8856e-6 ? y2 : (y - 16 / 116) / 7.787;
      x = x2 > 8856e-6 ? x2 : (x - 16 / 116) / 7.787;
      z = z2 > 8856e-6 ? z2 : (z - 16 / 116) / 7.787;
      x *= 95.047;
      y *= 100;
      z *= 108.883;
      return [x, y, z];
    };
    convert.lab.lch = function(lab) {
      const l = lab[0];
      const a = lab[1];
      const b = lab[2];
      let h;
      const hr = Math.atan2(b, a);
      h = hr * 360 / 2 / Math.PI;
      if (h < 0) {
        h += 360;
      }
      const c = Math.sqrt(a * a + b * b);
      return [l, c, h];
    };
    convert.lch.lab = function(lch) {
      const l = lch[0];
      const c = lch[1];
      const h = lch[2];
      const hr = h / 360 * 2 * Math.PI;
      const a = c * Math.cos(hr);
      const b = c * Math.sin(hr);
      return [l, a, b];
    };
    convert.rgb.ansi16 = function(args, saturation = null) {
      const [r, g, b] = args;
      let value = saturation === null ? convert.rgb.hsv(args)[2] : saturation;
      value = Math.round(value / 50);
      if (value === 0) {
        return 30;
      }
      let ansi = 30 + (Math.round(b / 255) << 2 | Math.round(g / 255) << 1 | Math.round(r / 255));
      if (value === 2) {
        ansi += 60;
      }
      return ansi;
    };
    convert.hsv.ansi16 = function(args) {
      return convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);
    };
    convert.rgb.ansi256 = function(args) {
      const r = args[0];
      const g = args[1];
      const b = args[2];
      if (r === g && g === b) {
        if (r < 8) {
          return 16;
        }
        if (r > 248) {
          return 231;
        }
        return Math.round((r - 8) / 247 * 24) + 232;
      }
      const ansi = 16 + 36 * Math.round(r / 255 * 5) + 6 * Math.round(g / 255 * 5) + Math.round(b / 255 * 5);
      return ansi;
    };
    convert.ansi16.rgb = function(args) {
      let color = args % 10;
      if (color === 0 || color === 7) {
        if (args > 50) {
          color += 3.5;
        }
        color = color / 10.5 * 255;
        return [color, color, color];
      }
      const mult = (~~(args > 50) + 1) * 0.5;
      const r = (color & 1) * mult * 255;
      const g = (color >> 1 & 1) * mult * 255;
      const b = (color >> 2 & 1) * mult * 255;
      return [r, g, b];
    };
    convert.ansi256.rgb = function(args) {
      if (args >= 232) {
        const c = (args - 232) * 10 + 8;
        return [c, c, c];
      }
      args -= 16;
      let rem;
      const r = Math.floor(args / 36) / 5 * 255;
      const g = Math.floor((rem = args % 36) / 6) / 5 * 255;
      const b = rem % 6 / 5 * 255;
      return [r, g, b];
    };
    convert.rgb.hex = function(args) {
      const integer = ((Math.round(args[0]) & 255) << 16) + ((Math.round(args[1]) & 255) << 8) + (Math.round(args[2]) & 255);
      const string = integer.toString(16).toUpperCase();
      return "000000".substring(string.length) + string;
    };
    convert.hex.rgb = function(args) {
      const match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
      if (!match) {
        return [0, 0, 0];
      }
      let colorString = match[0];
      if (match[0].length === 3) {
        colorString = colorString.split("").map((char) => {
          return char + char;
        }).join("");
      }
      const integer = parseInt(colorString, 16);
      const r = integer >> 16 & 255;
      const g = integer >> 8 & 255;
      const b = integer & 255;
      return [r, g, b];
    };
    convert.rgb.hcg = function(rgb) {
      const r = rgb[0] / 255;
      const g = rgb[1] / 255;
      const b = rgb[2] / 255;
      const max = Math.max(Math.max(r, g), b);
      const min = Math.min(Math.min(r, g), b);
      const chroma = max - min;
      let grayscale;
      let hue;
      if (chroma < 1) {
        grayscale = min / (1 - chroma);
      } else {
        grayscale = 0;
      }
      if (chroma <= 0) {
        hue = 0;
      } else if (max === r) {
        hue = (g - b) / chroma % 6;
      } else if (max === g) {
        hue = 2 + (b - r) / chroma;
      } else {
        hue = 4 + (r - g) / chroma;
      }
      hue /= 6;
      hue %= 1;
      return [hue * 360, chroma * 100, grayscale * 100];
    };
    convert.hsl.hcg = function(hsl) {
      const s = hsl[1] / 100;
      const l = hsl[2] / 100;
      const c = l < 0.5 ? 2 * s * l : 2 * s * (1 - l);
      let f = 0;
      if (c < 1) {
        f = (l - 0.5 * c) / (1 - c);
      }
      return [hsl[0], c * 100, f * 100];
    };
    convert.hsv.hcg = function(hsv) {
      const s = hsv[1] / 100;
      const v = hsv[2] / 100;
      const c = s * v;
      let f = 0;
      if (c < 1) {
        f = (v - c) / (1 - c);
      }
      return [hsv[0], c * 100, f * 100];
    };
    convert.hcg.rgb = function(hcg) {
      const h = hcg[0] / 360;
      const c = hcg[1] / 100;
      const g = hcg[2] / 100;
      if (c === 0) {
        return [g * 255, g * 255, g * 255];
      }
      const pure = [0, 0, 0];
      const hi = h % 1 * 6;
      const v = hi % 1;
      const w = 1 - v;
      let mg = 0;
      switch (Math.floor(hi)) {
        case 0:
          pure[0] = 1;
          pure[1] = v;
          pure[2] = 0;
          break;
        case 1:
          pure[0] = w;
          pure[1] = 1;
          pure[2] = 0;
          break;
        case 2:
          pure[0] = 0;
          pure[1] = 1;
          pure[2] = v;
          break;
        case 3:
          pure[0] = 0;
          pure[1] = w;
          pure[2] = 1;
          break;
        case 4:
          pure[0] = v;
          pure[1] = 0;
          pure[2] = 1;
          break;
        default:
          pure[0] = 1;
          pure[1] = 0;
          pure[2] = w;
      }
      mg = (1 - c) * g;
      return [
        (c * pure[0] + mg) * 255,
        (c * pure[1] + mg) * 255,
        (c * pure[2] + mg) * 255
      ];
    };
    convert.hcg.hsv = function(hcg) {
      const c = hcg[1] / 100;
      const g = hcg[2] / 100;
      const v = c + g * (1 - c);
      let f = 0;
      if (v > 0) {
        f = c / v;
      }
      return [hcg[0], f * 100, v * 100];
    };
    convert.hcg.hsl = function(hcg) {
      const c = hcg[1] / 100;
      const g = hcg[2] / 100;
      const l = g * (1 - c) + 0.5 * c;
      let s = 0;
      if (l > 0 && l < 0.5) {
        s = c / (2 * l);
      } else if (l >= 0.5 && l < 1) {
        s = c / (2 * (1 - l));
      }
      return [hcg[0], s * 100, l * 100];
    };
    convert.hcg.hwb = function(hcg) {
      const c = hcg[1] / 100;
      const g = hcg[2] / 100;
      const v = c + g * (1 - c);
      return [hcg[0], (v - c) * 100, (1 - v) * 100];
    };
    convert.hwb.hcg = function(hwb) {
      const w = hwb[1] / 100;
      const b = hwb[2] / 100;
      const v = 1 - b;
      const c = v - w;
      let g = 0;
      if (c < 1) {
        g = (v - c) / (1 - c);
      }
      return [hwb[0], c * 100, g * 100];
    };
    convert.apple.rgb = function(apple) {
      return [apple[0] / 65535 * 255, apple[1] / 65535 * 255, apple[2] / 65535 * 255];
    };
    convert.rgb.apple = function(rgb) {
      return [rgb[0] / 255 * 65535, rgb[1] / 255 * 65535, rgb[2] / 255 * 65535];
    };
    convert.gray.rgb = function(args) {
      return [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];
    };
    convert.gray.hsl = function(args) {
      return [0, 0, args[0]];
    };
    convert.gray.hsv = convert.gray.hsl;
    convert.gray.hwb = function(gray) {
      return [0, 100, gray[0]];
    };
    convert.gray.cmyk = function(gray) {
      return [0, 0, 0, gray[0]];
    };
    convert.gray.lab = function(gray) {
      return [gray[0], 0, 0];
    };
    convert.gray.hex = function(gray) {
      const val = Math.round(gray[0] / 100 * 255) & 255;
      const integer = (val << 16) + (val << 8) + val;
      const string = integer.toString(16).toUpperCase();
      return "000000".substring(string.length) + string;
    };
    convert.rgb.gray = function(rgb) {
      const val = (rgb[0] + rgb[1] + rgb[2]) / 3;
      return [val / 255 * 100];
    };
  }
});

// node_modules/color-convert/route.js
var require_route = __commonJS({
  "node_modules/color-convert/route.js"(exports, module) {
    var conversions = require_conversions();
    function buildGraph() {
      const graph = {};
      const models = Object.keys(conversions);
      for (let len = models.length, i2 = 0; i2 < len; i2++) {
        graph[models[i2]] = {
          // http://jsperf.com/1-vs-infinity
          // micro-opt, but this is simple.
          distance: -1,
          parent: null
        };
      }
      return graph;
    }
    function deriveBFS(fromModel) {
      const graph = buildGraph();
      const queue = [fromModel];
      graph[fromModel].distance = 0;
      while (queue.length) {
        const current = queue.pop();
        const adjacents = Object.keys(conversions[current]);
        for (let len = adjacents.length, i2 = 0; i2 < len; i2++) {
          const adjacent = adjacents[i2];
          const node = graph[adjacent];
          if (node.distance === -1) {
            node.distance = graph[current].distance + 1;
            node.parent = current;
            queue.unshift(adjacent);
          }
        }
      }
      return graph;
    }
    function link(from, to) {
      return function(args) {
        return to(from(args));
      };
    }
    function wrapConversion(toModel, graph) {
      const path = [graph[toModel].parent, toModel];
      let fn = conversions[graph[toModel].parent][toModel];
      let cur = graph[toModel].parent;
      while (graph[cur].parent) {
        path.unshift(graph[cur].parent);
        fn = link(conversions[graph[cur].parent][cur], fn);
        cur = graph[cur].parent;
      }
      fn.conversion = path;
      return fn;
    }
    module.exports = function(fromModel) {
      const graph = deriveBFS(fromModel);
      const conversion = {};
      const models = Object.keys(graph);
      for (let len = models.length, i2 = 0; i2 < len; i2++) {
        const toModel = models[i2];
        const node = graph[toModel];
        if (node.parent === null) {
          continue;
        }
        conversion[toModel] = wrapConversion(toModel, graph);
      }
      return conversion;
    };
  }
});

// node_modules/color-convert/index.js
var require_color_convert = __commonJS({
  "node_modules/color-convert/index.js"(exports, module) {
    var conversions = require_conversions();
    var route = require_route();
    var convert = {};
    var models = Object.keys(conversions);
    function wrapRaw(fn) {
      const wrappedFn = function(...args) {
        const arg0 = args[0];
        if (arg0 === void 0 || arg0 === null) {
          return arg0;
        }
        if (arg0.length > 1) {
          args = arg0;
        }
        return fn(args);
      };
      if ("conversion" in fn) {
        wrappedFn.conversion = fn.conversion;
      }
      return wrappedFn;
    }
    function wrapRounded(fn) {
      const wrappedFn = function(...args) {
        const arg0 = args[0];
        if (arg0 === void 0 || arg0 === null) {
          return arg0;
        }
        if (arg0.length > 1) {
          args = arg0;
        }
        const result = fn(args);
        if (typeof result === "object") {
          for (let len = result.length, i2 = 0; i2 < len; i2++) {
            result[i2] = Math.round(result[i2]);
          }
        }
        return result;
      };
      if ("conversion" in fn) {
        wrappedFn.conversion = fn.conversion;
      }
      return wrappedFn;
    }
    models.forEach((fromModel) => {
      convert[fromModel] = {};
      Object.defineProperty(convert[fromModel], "channels", { value: conversions[fromModel].channels });
      Object.defineProperty(convert[fromModel], "labels", { value: conversions[fromModel].labels });
      const routes = route(fromModel);
      const routeModels = Object.keys(routes);
      routeModels.forEach((toModel) => {
        const fn = routes[toModel];
        convert[fromModel][toModel] = wrapRounded(fn);
        convert[fromModel][toModel].raw = wrapRaw(fn);
      });
    });
    module.exports = convert;
  }
});

// node_modules/color-thief-react/lib/utils/rgbStringfy.js
var require_rgbStringfy = __commonJS({
  "node_modules/color-thief-react/lib/utils/rgbStringfy.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function rgbStringfy(r, g, b) {
      return "rgb(" + r + ", " + g + ", " + b + ")";
    }
    exports.default = rgbStringfy;
  }
});

// node_modules/color-thief-react/lib/utils/hslStringfy.js
var require_hslStringfy = __commonJS({
  "node_modules/color-thief-react/lib/utils/hslStringfy.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function hslStringfy(hsl) {
      return "hsl(" + hsl[0] + ", " + hsl[1] + "%, " + hsl[2] + "%)";
    }
    exports.default = hslStringfy;
  }
});

// node_modules/color-thief-react/lib/utils/formatHex.js
var require_formatHex = __commonJS({
  "node_modules/color-thief-react/lib/utils/formatHex.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function formatHex(hex) {
      return "#" + hex.toLowerCase();
    }
    exports.default = formatHex;
  }
});

// node_modules/color-thief-react/lib/utils/formatRGB.js
var require_formatRGB = __commonJS({
  "node_modules/color-thief-react/lib/utils/formatRGB.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var color_convert_1 = tslib_1.__importDefault(require_color_convert());
    var rgbStringfy_1 = tslib_1.__importDefault(require_rgbStringfy());
    var hslStringfy_1 = tslib_1.__importDefault(require_hslStringfy());
    var formatHex_1 = tslib_1.__importDefault(require_formatHex());
    function formatRGB(arrayRGB, format) {
      var responses = {
        rgbString: function() {
          return rgbStringfy_1.default.apply(void 0, arrayRGB);
        },
        hex: function() {
          var _a;
          return formatHex_1.default((_a = color_convert_1.default.rgb).hex.apply(_a, arrayRGB));
        },
        rgbArray: function() {
          return arrayRGB;
        },
        hslString: function() {
          var _a;
          return hslStringfy_1.default((_a = color_convert_1.default.rgb).hsl.apply(_a, arrayRGB));
        },
        hslArray: function() {
          var _a;
          return (_a = color_convert_1.default.rgb).hsl.apply(_a, arrayRGB);
        },
        keyword: function() {
          var _a;
          return (_a = color_convert_1.default.rgb).keyword.apply(_a, arrayRGB);
        }
      };
      return responses[format]();
    }
    exports.default = formatRGB;
  }
});

// node_modules/colorthief/dist/color-thief.umd.js
var require_color_thief_umd = __commonJS({
  "node_modules/colorthief/dist/color-thief.umd.js"(exports, module) {
    !function(t, r) {
      "object" == typeof exports && "undefined" != typeof module ? module.exports = r() : "function" == typeof define && define.amd ? define(r) : t.ColorThief = r();
    }(exports, function() {
      if (!t) var t = { map: function(t2, r2) {
        var n2 = {};
        return r2 ? t2.map(function(t3, o2) {
          return n2.index = o2, r2.call(n2, t3);
        }) : t2.slice();
      }, naturalOrder: function(t2, r2) {
        return t2 < r2 ? -1 : t2 > r2 ? 1 : 0;
      }, sum: function(t2, r2) {
        var n2 = {};
        return t2.reduce(r2 ? function(t3, o2, e) {
          return n2.index = e, t3 + r2.call(n2, o2);
        } : function(t3, r3) {
          return t3 + r3;
        }, 0);
      }, max: function(r2, n2) {
        return Math.max.apply(null, n2 ? t.map(r2, n2) : r2);
      } };
      var r = function() {
        var r2 = 5, n2 = 8 - r2, o2 = 1e3;
        function e(t2, n3, o3) {
          return (t2 << 2 * r2) + (n3 << r2) + o3;
        }
        function i2(t2) {
          var r3 = [], n3 = false;
          function o3() {
            r3.sort(t2), n3 = true;
          }
          return { push: function(t3) {
            r3.push(t3), n3 = false;
          }, peek: function(t3) {
            return n3 || o3(), void 0 === t3 && (t3 = r3.length - 1), r3[t3];
          }, pop: function() {
            return n3 || o3(), r3.pop();
          }, size: function() {
            return r3.length;
          }, map: function(t3) {
            return r3.map(t3);
          }, debug: function() {
            return n3 || o3(), r3;
          } };
        }
        function u(t2, r3, n3, o3, e2, i3, u2) {
          this.r1 = t2, this.r2 = r3, this.g1 = n3, this.g2 = o3, this.b1 = e2, this.b2 = i3, this.histo = u2;
        }
        function a() {
          this.vboxes = new i2(function(r3, n3) {
            return t.naturalOrder(r3.vbox.count() * r3.vbox.volume(), n3.vbox.count() * n3.vbox.volume());
          });
        }
        function s(r3, n3) {
          if (n3.count()) {
            var o3 = n3.r2 - n3.r1 + 1, i3 = n3.g2 - n3.g1 + 1, u2 = t.max([o3, i3, n3.b2 - n3.b1 + 1]);
            if (1 == n3.count()) return [n3.copy()];
            var a2, s2, h, c, f = 0, v = [], l = [];
            if (u2 == o3) for (a2 = n3.r1; a2 <= n3.r2; a2++) {
              for (c = 0, s2 = n3.g1; s2 <= n3.g2; s2++) for (h = n3.b1; h <= n3.b2; h++) c += r3[e(a2, s2, h)] || 0;
              v[a2] = f += c;
            }
            else if (u2 == i3) for (a2 = n3.g1; a2 <= n3.g2; a2++) {
              for (c = 0, s2 = n3.r1; s2 <= n3.r2; s2++) for (h = n3.b1; h <= n3.b2; h++) c += r3[e(s2, a2, h)] || 0;
              v[a2] = f += c;
            }
            else for (a2 = n3.b1; a2 <= n3.b2; a2++) {
              for (c = 0, s2 = n3.r1; s2 <= n3.r2; s2++) for (h = n3.g1; h <= n3.g2; h++) c += r3[e(s2, h, a2)] || 0;
              v[a2] = f += c;
            }
            return v.forEach(function(t2, r4) {
              l[r4] = f - t2;
            }), function(t2) {
              var r4, o4, e2, i4, u3, s3 = t2 + "1", h2 = t2 + "2", c2 = 0;
              for (a2 = n3[s3]; a2 <= n3[h2]; a2++) if (v[a2] > f / 2) {
                for (e2 = n3.copy(), i4 = n3.copy(), u3 = (r4 = a2 - n3[s3]) <= (o4 = n3[h2] - a2) ? Math.min(n3[h2] - 1, ~~(a2 + o4 / 2)) : Math.max(n3[s3], ~~(a2 - 1 - r4 / 2)); !v[u3]; ) u3++;
                for (c2 = l[u3]; !c2 && v[u3 - 1]; ) c2 = l[--u3];
                return e2[h2] = u3, i4[s3] = e2[h2] + 1, [e2, i4];
              }
            }(u2 == o3 ? "r" : u2 == i3 ? "g" : "b");
          }
        }
        return u.prototype = { volume: function(t2) {
          return this._volume && !t2 || (this._volume = (this.r2 - this.r1 + 1) * (this.g2 - this.g1 + 1) * (this.b2 - this.b1 + 1)), this._volume;
        }, count: function(t2) {
          var r3 = this.histo;
          if (!this._count_set || t2) {
            var n3, o3, i3, u2 = 0;
            for (n3 = this.r1; n3 <= this.r2; n3++) for (o3 = this.g1; o3 <= this.g2; o3++) for (i3 = this.b1; i3 <= this.b2; i3++) u2 += r3[e(n3, o3, i3)] || 0;
            this._count = u2, this._count_set = true;
          }
          return this._count;
        }, copy: function() {
          return new u(this.r1, this.r2, this.g1, this.g2, this.b1, this.b2, this.histo);
        }, avg: function(t2) {
          var n3 = this.histo;
          if (!this._avg || t2) {
            var o3, i3, u2, a2, s2 = 0, h = 1 << 8 - r2, c = 0, f = 0, v = 0;
            for (i3 = this.r1; i3 <= this.r2; i3++) for (u2 = this.g1; u2 <= this.g2; u2++) for (a2 = this.b1; a2 <= this.b2; a2++) s2 += o3 = n3[e(i3, u2, a2)] || 0, c += o3 * (i3 + 0.5) * h, f += o3 * (u2 + 0.5) * h, v += o3 * (a2 + 0.5) * h;
            this._avg = s2 ? [~~(c / s2), ~~(f / s2), ~~(v / s2)] : [~~(h * (this.r1 + this.r2 + 1) / 2), ~~(h * (this.g1 + this.g2 + 1) / 2), ~~(h * (this.b1 + this.b2 + 1) / 2)];
          }
          return this._avg;
        }, contains: function(t2) {
          var r3 = t2[0] >> n2;
          return gval = t2[1] >> n2, bval = t2[2] >> n2, r3 >= this.r1 && r3 <= this.r2 && gval >= this.g1 && gval <= this.g2 && bval >= this.b1 && bval <= this.b2;
        } }, a.prototype = { push: function(t2) {
          this.vboxes.push({ vbox: t2, color: t2.avg() });
        }, palette: function() {
          return this.vboxes.map(function(t2) {
            return t2.color;
          });
        }, size: function() {
          return this.vboxes.size();
        }, map: function(t2) {
          for (var r3 = this.vboxes, n3 = 0; n3 < r3.size(); n3++) if (r3.peek(n3).vbox.contains(t2)) return r3.peek(n3).color;
          return this.nearest(t2);
        }, nearest: function(t2) {
          for (var r3, n3, o3, e2 = this.vboxes, i3 = 0; i3 < e2.size(); i3++) ((n3 = Math.sqrt(Math.pow(t2[0] - e2.peek(i3).color[0], 2) + Math.pow(t2[1] - e2.peek(i3).color[1], 2) + Math.pow(t2[2] - e2.peek(i3).color[2], 2))) < r3 || void 0 === r3) && (r3 = n3, o3 = e2.peek(i3).color);
          return o3;
        }, forcebw: function() {
          var r3 = this.vboxes;
          r3.sort(function(r4, n4) {
            return t.naturalOrder(t.sum(r4.color), t.sum(n4.color));
          });
          var n3 = r3[0].color;
          n3[0] < 5 && n3[1] < 5 && n3[2] < 5 && (r3[0].color = [0, 0, 0]);
          var o3 = r3.length - 1, e2 = r3[o3].color;
          e2[0] > 251 && e2[1] > 251 && e2[2] > 251 && (r3[o3].color = [255, 255, 255]);
        } }, { quantize: function(h, c) {
          if (!h.length || c < 2 || c > 256) return false;
          var f = function(t2) {
            var o3, i3 = new Array(1 << 3 * r2);
            return t2.forEach(function(t3) {
              o3 = e(t3[0] >> n2, t3[1] >> n2, t3[2] >> n2), i3[o3] = (i3[o3] || 0) + 1;
            }), i3;
          }(h);
          f.forEach(function() {
          });
          var v = function(t2, r3) {
            var o3, e2, i3, a2 = 1e6, s2 = 0, h2 = 1e6, c2 = 0, f2 = 1e6, v2 = 0;
            return t2.forEach(function(t3) {
              (o3 = t3[0] >> n2) < a2 ? a2 = o3 : o3 > s2 && (s2 = o3), (e2 = t3[1] >> n2) < h2 ? h2 = e2 : e2 > c2 && (c2 = e2), (i3 = t3[2] >> n2) < f2 ? f2 = i3 : i3 > v2 && (v2 = i3);
            }), new u(a2, s2, h2, c2, f2, v2, r3);
          }(h, f), l = new i2(function(r3, n3) {
            return t.naturalOrder(r3.count(), n3.count());
          });
          function g(t2, r3) {
            for (var n3, e2 = t2.size(), i3 = 0; i3 < o2; ) {
              if (e2 >= r3) return;
              if (i3++ > o2) return;
              if ((n3 = t2.pop()).count()) {
                var u2 = s(f, n3), a2 = u2[0], h2 = u2[1];
                if (!a2) return;
                t2.push(a2), h2 && (t2.push(h2), e2++);
              } else t2.push(n3), i3++;
            }
          }
          l.push(v), g(l, 0.75 * c);
          for (var p = new i2(function(r3, n3) {
            return t.naturalOrder(r3.count() * r3.volume(), n3.count() * n3.volume());
          }); l.size(); ) p.push(l.pop());
          g(p, c);
          for (var d = new a(); p.size(); ) d.push(p.pop());
          return d;
        } };
      }().quantize, n = function(t2) {
        this.canvas = document.createElement("canvas"), this.context = this.canvas.getContext("2d"), this.width = this.canvas.width = t2.naturalWidth, this.height = this.canvas.height = t2.naturalHeight, this.context.drawImage(t2, 0, 0, this.width, this.height);
      };
      n.prototype.getImageData = function() {
        return this.context.getImageData(0, 0, this.width, this.height);
      };
      var o = function() {
      };
      return o.prototype.getColor = function(t2, r2) {
        return void 0 === r2 && (r2 = 10), this.getPalette(t2, 5, r2)[0];
      }, o.prototype.getPalette = function(t2, o2, e) {
        var i2 = function(t3) {
          var r2 = t3.colorCount, n2 = t3.quality;
          if (void 0 !== r2 && Number.isInteger(r2)) {
            if (1 === r2) throw new Error("colorCount should be between 2 and 20. To get one color, call getColor() instead of getPalette()");
            r2 = Math.max(r2, 2), r2 = Math.min(r2, 20);
          } else r2 = 10;
          return (void 0 === n2 || !Number.isInteger(n2) || n2 < 1) && (n2 = 10), { colorCount: r2, quality: n2 };
        }({ colorCount: o2, quality: e }), u = new n(t2), a = function(t3, r2, n2) {
          for (var o3 = t3, e2 = [], i3 = 0, u2 = void 0, a2 = void 0, s2 = void 0, h = void 0, c = void 0; i3 < r2; i3 += n2) a2 = o3[0 + (u2 = 4 * i3)], s2 = o3[u2 + 1], h = o3[u2 + 2], (void 0 === (c = o3[u2 + 3]) || c >= 125) && (a2 > 250 && s2 > 250 && h > 250 || e2.push([a2, s2, h]));
          return e2;
        }(u.getImageData().data, u.width * u.height, i2.quality), s = r(a, i2.colorCount);
        return s ? s.palette() : null;
      }, o.prototype.getColorFromUrl = function(t2, r2, n2) {
        var o2 = this, e = document.createElement("img");
        e.addEventListener("load", function() {
          var i2 = o2.getPalette(e, 5, n2);
          r2(i2[0], t2);
        }), e.src = t2;
      }, o.prototype.getImageData = function(t2, r2) {
        var n2 = new XMLHttpRequest();
        n2.open("GET", t2, true), n2.responseType = "arraybuffer", n2.onload = function() {
          if (200 == this.status) {
            var t3 = new Uint8Array(this.response);
            i = t3.length;
            for (var n3 = new Array(i), o2 = 0; o2 < t3.length; o2++) n3[o2] = String.fromCharCode(t3[o2]);
            var e = n3.join(""), u = window.btoa(e);
            r2("data:image/png;base64," + u);
          }
        }, n2.send();
      }, o.prototype.getColorAsync = function(t2, r2, n2) {
        var o2 = this;
        this.getImageData(t2, function(t3) {
          var e = document.createElement("img");
          e.addEventListener("load", function() {
            var t4 = o2.getPalette(e, 5, n2);
            r2(t4[0], this);
          }), e.src = t3;
        });
      }, o;
    });
  }
});

// node_modules/color-thief-react/lib/utils/getColorsPaletteFromImgUrl.js
var require_getColorsPaletteFromImgUrl = __commonJS({
  "node_modules/color-thief-react/lib/utils/getColorsPaletteFromImgUrl.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var color_thief_umd_js_1 = tslib_1.__importDefault(require_color_thief_umd());
    var _1 = require_utils();
    function getColorsPaletteFromImgUrl(imgUrl, colorCount, format, crossOrigin, quality) {
      if (colorCount === void 0) {
        colorCount = 2;
      }
      if (crossOrigin === void 0) {
        crossOrigin = null;
      }
      if (quality === void 0) {
        quality = 10;
      }
      return tslib_1.__awaiter(this, void 0, void 0, function() {
        var img, cf, arrayRGB;
        return tslib_1.__generator(this, function(_a) {
          switch (_a.label) {
            case 0:
              return [4, _1.loadImage(imgUrl, crossOrigin)];
            case 1:
              img = _a.sent();
              cf = new color_thief_umd_js_1.default();
              arrayRGB = cf.getPalette(img, colorCount, quality);
              return [2, arrayRGB.map(function(color) {
                return _1.formatRGB(color, format);
              })];
          }
        });
      });
    }
    exports.default = getColorsPaletteFromImgUrl;
  }
});

// node_modules/color-thief-react/lib/utils/getPredominantColorFromImgURL.js
var require_getPredominantColorFromImgURL = __commonJS({
  "node_modules/color-thief-react/lib/utils/getPredominantColorFromImgURL.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var color_thief_umd_js_1 = tslib_1.__importDefault(require_color_thief_umd());
    var _1 = require_utils();
    function getPredominantColorFromImgURL(imgSrc, format, crossOrigin, quality) {
      if (crossOrigin === void 0) {
        crossOrigin = null;
      }
      if (quality === void 0) {
        quality = 10;
      }
      return tslib_1.__awaiter(this, void 0, void 0, function() {
        var img, ct, arrayRGB;
        return tslib_1.__generator(this, function(_a) {
          switch (_a.label) {
            case 0:
              return [4, _1.loadImage(imgSrc, crossOrigin)];
            case 1:
              img = _a.sent();
              ct = new color_thief_umd_js_1.default();
              arrayRGB = ct.getColor(img, quality);
              return [2, _1.formatRGB(arrayRGB, format)];
          }
        });
      });
    }
    exports.default = getPredominantColorFromImgURL;
  }
});

// node_modules/color-thief-react/lib/utils/loadImage.js
var require_loadImage = __commonJS({
  "node_modules/color-thief-react/lib/utils/loadImage.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function loadImage(url, crossOrigin) {
      if (crossOrigin === void 0) {
        crossOrigin = null;
      }
      return new Promise(function(resolve, reject) {
        var img = new Image();
        img.addEventListener("load", function() {
          resolve(img);
        });
        img.addEventListener("error", function() {
          reject(new Error("Color Thief React | Failed to load image URL: " + url));
        });
        img.crossOrigin = crossOrigin;
        img.src = url;
      });
    }
    exports.default = loadImage;
  }
});

// node_modules/color-thief-react/lib/utils/index.js
var require_utils = __commonJS({
  "node_modules/color-thief-react/lib/utils/index.js"(exports) {
    "use strict";
    var __importDefault2 = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.loadImage = exports.getPredominantColorFromImgURL = exports.rgbStringfy = exports.getColorsPaletteFromImgUrl = exports.formatRGB = exports.reducer = exports.initialReducerState = void 0;
    var initialReducerState_1 = require_initialReducerState();
    Object.defineProperty(exports, "initialReducerState", { enumerable: true, get: function() {
      return __importDefault2(initialReducerState_1).default;
    } });
    var reducer_1 = require_reducer();
    Object.defineProperty(exports, "reducer", { enumerable: true, get: function() {
      return __importDefault2(reducer_1).default;
    } });
    var formatRGB_1 = require_formatRGB();
    Object.defineProperty(exports, "formatRGB", { enumerable: true, get: function() {
      return __importDefault2(formatRGB_1).default;
    } });
    var getColorsPaletteFromImgUrl_1 = require_getColorsPaletteFromImgUrl();
    Object.defineProperty(exports, "getColorsPaletteFromImgUrl", { enumerable: true, get: function() {
      return __importDefault2(getColorsPaletteFromImgUrl_1).default;
    } });
    var rgbStringfy_1 = require_rgbStringfy();
    Object.defineProperty(exports, "rgbStringfy", { enumerable: true, get: function() {
      return __importDefault2(rgbStringfy_1).default;
    } });
    var getPredominantColorFromImgURL_1 = require_getPredominantColorFromImgURL();
    Object.defineProperty(exports, "getPredominantColorFromImgURL", { enumerable: true, get: function() {
      return __importDefault2(getPredominantColorFromImgURL_1).default;
    } });
    var loadImage_1 = require_loadImage();
    Object.defineProperty(exports, "loadImage", { enumerable: true, get: function() {
      return __importDefault2(loadImage_1).default;
    } });
  }
});

// node_modules/color-thief-react/lib/Color/useColor.js
var require_useColor = __commonJS({
  "node_modules/color-thief-react/lib/Color/useColor.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var React = tslib_1.__importStar(require_react());
    var use_current_effect_1 = require_dist();
    var utils_1 = require_utils();
    function useColor(imgSrc, format, options) {
      if (options === void 0) {
        options = {};
      }
      var _a = options.crossOrigin, crossOrigin = _a === void 0 ? null : _a, _b = options.quality, quality = _b === void 0 ? 10 : _b;
      var _c = React.useReducer(utils_1.reducer, utils_1.initialReducerState), state = _c[0], dispatch = _c[1];
      use_current_effect_1.useCurrentEffect(function(isCurrent) {
        dispatch({ type: "start", payload: null });
        utils_1.getPredominantColorFromImgURL(imgSrc, format, crossOrigin, quality).then(function(color) {
          if (isCurrent()) {
            dispatch({ type: "resolve", payload: color });
          }
        }).catch(function(ex) {
          if (isCurrent()) {
            dispatch({ type: "reject", payload: ex });
          }
        });
      }, [imgSrc]);
      return state;
    }
    exports.default = useColor;
  }
});

// node_modules/color-thief-react/lib/Color/Color.component.js
var require_Color_component = __commonJS({
  "node_modules/color-thief-react/lib/Color/Color.component.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var React = tslib_1.__importStar(require_react());
    var useColor_1 = tslib_1.__importDefault(require_useColor());
    function Color(_a) {
      var src = _a.src, format = _a.format, _b = _a.crossOrigin, crossOrigin = _b === void 0 ? void 0 : _b, _c = _a.quality, quality = _c === void 0 ? 10 : _c, children = _a.children;
      var state = useColor_1.default(src, format, { crossOrigin, quality });
      return React.createElement(React.Fragment, null, children(state));
    }
    exports.default = Color;
  }
});

// node_modules/color-thief-react/lib/Palette/usePalette.js
var require_usePalette = __commonJS({
  "node_modules/color-thief-react/lib/Palette/usePalette.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var React = tslib_1.__importStar(require_react());
    var use_current_effect_1 = require_dist();
    var utils_1 = require_utils();
    function usePalette(imgSrc, colorCount, format, options) {
      if (colorCount === void 0) {
        colorCount = 2;
      }
      if (options === void 0) {
        options = {};
      }
      var _a = options.crossOrigin, crossOrigin = _a === void 0 ? null : _a, _b = options.quality, quality = _b === void 0 ? 10 : _b;
      var _c = React.useReducer(utils_1.reducer, utils_1.initialReducerState), state = _c[0], dispatch = _c[1];
      use_current_effect_1.useCurrentEffect(function(isCurrent) {
        dispatch({ type: "start", payload: null });
        utils_1.getColorsPaletteFromImgUrl(imgSrc, colorCount, format, crossOrigin, quality).then(function(color) {
          if (isCurrent()) {
            dispatch({ type: "resolve", payload: color });
          }
        }).catch(function(ex) {
          if (isCurrent()) {
            dispatch({ type: "reject", payload: ex });
          }
        });
      }, [imgSrc]);
      return state;
    }
    exports.default = usePalette;
  }
});

// node_modules/color-thief-react/lib/Palette/Palette.component.js
var require_Palette_component = __commonJS({
  "node_modules/color-thief-react/lib/Palette/Palette.component.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var React = tslib_1.__importStar(require_react());
    var usePalette_1 = tslib_1.__importDefault(require_usePalette());
    function Palette(_a) {
      var src = _a.src, _b = _a.colorCount, colorCount = _b === void 0 ? 2 : _b, format = _a.format, _c = _a.crossOrigin, crossOrigin = _c === void 0 ? void 0 : _c, _d = _a.quality, quality = _d === void 0 ? 10 : _d, children = _a.children;
      var state = usePalette_1.default(src, colorCount, format, {
        crossOrigin,
        quality
      });
      return React.createElement(React.Fragment, null, children(state));
    }
    exports.default = Palette;
  }
});

// node_modules/color-thief-react/lib/index.js
var require_lib = __commonJS({
  "node_modules/color-thief-react/lib/index.js"(exports) {
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getPalette = exports.usePalette = exports.Palette = exports.getColor = exports.Color = exports.useColor = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var Color_component_1 = tslib_1.__importDefault(require_Color_component());
    exports.Color = Color_component_1.default;
    var useColor_1 = tslib_1.__importDefault(require_useColor());
    exports.useColor = useColor_1.default;
    var getColorsPaletteFromImgUrl_1 = tslib_1.__importDefault(require_getColorsPaletteFromImgUrl());
    exports.getPalette = getColorsPaletteFromImgUrl_1.default;
    var Palette_component_1 = tslib_1.__importDefault(require_Palette_component());
    exports.Palette = Palette_component_1.default;
    var usePalette_1 = tslib_1.__importDefault(require_usePalette());
    exports.usePalette = usePalette_1.default;
    var getPredominantColorFromImgURL_1 = tslib_1.__importDefault(require_getPredominantColorFromImgURL());
    exports.getColor = getPredominantColorFromImgURL_1.default;
    exports.default = Color_component_1.default;
  }
});
export default require_lib();
/*! Bundled license information:

tslib/tslib.es6.js:
  (*! *****************************************************************************
  Copyright (c) Microsoft Corporation.
  
  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.
  
  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** *)
*/
//# sourceMappingURL=color-thief-react.js.map
